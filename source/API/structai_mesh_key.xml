<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="structai_mesh_key" kind="struct" language="C++" prot="public">
    <compoundname>aiMeshKey</compoundname>
    <includes local="no">anim.h</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="structai_mesh_key_1a33a6e7a5290670ac93233fccf7f80bcb" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int aiMeshKey::elem_type</definition>
        <argsstring></argsstring>
        <name>elem_type</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="171" column="26" bodyfile="include/assimp/anim.h" bodystart="171" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structai_mesh_key_1a0814e4b14ed162295ba19331410a51ab" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double aiMeshKey::mTime</definition>
        <argsstring></argsstring>
        <name>mTime</name>
        <briefdescription>
<para>The time of this key. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="152" column="12" bodyfile="include/assimp/anim.h" bodystart="152" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structai_mesh_key_1abdd5914697609a9d876f63b6ca090a18" prot="public" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int aiMeshKey::mValue</definition>
        <argsstring></argsstring>
        <name>mValue</name>
        <briefdescription>
<para>Index into the <ref refid="structai_mesh_1a5078f7db7e99ed05db89dfa412f0e990" kindref="member">aiMesh::mAnimMeshes</ref> array of the mesh corresponding to the <ref refid="structai_mesh_anim" kindref="compound">aiMeshAnim</ref> hosting this key frame. </para>
        </briefdescription>
        <detaileddescription>
<para>The referenced anim mesh is evaluated according to the rules defined in the docs for <ref refid="structai_anim_mesh" kindref="compound">aiAnimMesh</ref>. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="158" column="18" bodyfile="include/assimp/anim.h" bodystart="158" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structai_mesh_key_1a6fc123479e0c45f555d2cdd2f13fb8ea" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aiMeshKey::aiMeshKey</definition>
        <argsstring>() AI_NO_EXCEPT</argsstring>
        <name>aiMeshKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="162" column="5" bodyfile="include/assimp/anim.h" bodystart="162" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="structai_mesh_key_1a7124aaa1cdfa525fe19d8a77b5554296" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>aiMeshKey::aiMeshKey</definition>
        <argsstring>(double time, const unsigned int value)</argsstring>
        <name>aiMeshKey</name>
        <param>
          <type>double</type>
          <declname>time</declname>
        </param>
        <param>
          <type>const unsigned int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Construction from a given time and key value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="168" column="5" bodyfile="include/assimp/anim.h" bodystart="168" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structai_mesh_key_1a06745bfef9269d3c4b7b378cb8b90c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aiMeshKey::operator!=</definition>
        <argsstring>(const aiMeshKey &amp;o) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structai_mesh_key" kindref="compound">aiMeshKey</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="177" column="10" bodyfile="include/assimp/anim.h" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structai_mesh_key_1ae51d320da82497d3b93429e8485134e9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aiMeshKey::operator&lt;</definition>
        <argsstring>(const aiMeshKey &amp;o) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="structai_mesh_key" kindref="compound">aiMeshKey</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="182" column="5" bodyfile="include/assimp/anim.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structai_mesh_key_1af2fc9cbc8b56ef64b0beb24de15516fe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aiMeshKey::operator==</definition>
        <argsstring>(const aiMeshKey &amp;o) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structai_mesh_key" kindref="compound">aiMeshKey</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="174" column="10" bodyfile="include/assimp/anim.h" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="structai_mesh_key_1aab2b5817350a9ab44aef748a2d9b612f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool aiMeshKey::operator&gt;</definition>
        <argsstring>(const aiMeshKey &amp;o) const</argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="structai_mesh_key" kindref="compound">aiMeshKey</ref> &amp;</type>
          <declname>o</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/anim.h" line="185" column="10" bodyfile="include/assimp/anim.h" bodystart="185" bodyend="187"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Binds a anim-mesh to a specific point in time. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/assimp/anim.h" line="150" column="1" bodyfile="include/assimp/anim.h" bodystart="150" bodyend="190"/>
    <listofallmembers>
      <member refid="structai_mesh_key_1a6fc123479e0c45f555d2cdd2f13fb8ea" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>aiMeshKey</name></member>
      <member refid="structai_mesh_key_1a7124aaa1cdfa525fe19d8a77b5554296" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>aiMeshKey</name></member>
      <member refid="structai_mesh_key_1a33a6e7a5290670ac93233fccf7f80bcb" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>elem_type</name></member>
      <member refid="structai_mesh_key_1a0814e4b14ed162295ba19331410a51ab" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>mTime</name></member>
      <member refid="structai_mesh_key_1abdd5914697609a9d876f63b6ca090a18" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>mValue</name></member>
      <member refid="structai_mesh_key_1a06745bfef9269d3c4b7b378cb8b90c32" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>operator!=</name></member>
      <member refid="structai_mesh_key_1ae51d320da82497d3b93429e8485134e9" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>operator&lt;</name></member>
      <member refid="structai_mesh_key_1af2fc9cbc8b56ef64b0beb24de15516fe" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>operator==</name></member>
      <member refid="structai_mesh_key_1aab2b5817350a9ab44aef748a2d9b612f" prot="public" virt="non-virtual"><scope>aiMeshKey</scope><name>operator&gt;</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
