<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_assimp_1_1_stream_writer" kind="class" language="C++" prot="public">
    <compoundname>Assimp::StreamWriter</compoundname>
    <includes local="no">StreamWriter.h</includes>
    <templateparamlist>
      <param>
        <type>bool</type>
        <declname>SwapEndianess</declname>
        <defname>SwapEndianess</defname>
        <defval>false</defval>
      </param>
      <param>
        <type>bool</type>
        <declname>RuntimeSwitch</declname>
        <defname>RuntimeSwitch</defname>
        <defval>false</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="enum" id="class_assimp_1_1_stream_writer_1aa932db86d937bc1bb6a458f1e79c4e9b" prot="private" static="no" strong="no">
        <type></type>
        <name>@2</name>
        <enumvalue id="class_assimp_1_1_stream_writer_1aa932db86d937bc1bb6a458f1e79c4e9ba763b621e6f3b2cc45d1545a1936a74fa" prot="private">
          <name>INITIAL_CAPACITY</name>
          <initializer>= 1024</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="73" column="5" bodyfile="include/assimp/StreamWriter.h" bodystart="73" bodyend="75"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_assimp_1_1_stream_writer_1aac1c56adbdf50771a16216bb1640cd7d" prot="private" static="no" mutable="no">
        <type>std::vector&lt; uint8_t &gt;</type>
        <definition>std::vector&lt;uint8_t&gt; Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::buffer</definition>
        <argsstring></argsstring>
        <name>buffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="286" column="17" bodyfile="include/assimp/StreamWriter.h" bodystart="286" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_assimp_1_1_stream_writer_1a4afc8fee3b43ec8f44119c79e5522e8b" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::cursor</definition>
        <argsstring></argsstring>
        <name>cursor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="287" column="17" bodyfile="include/assimp/StreamWriter.h" bodystart="287" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_assimp_1_1_stream_writer_1ab7b318e211f1fb34b19317a1dca05ba6" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::le</definition>
        <argsstring></argsstring>
        <name>le</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="284" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="284" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_assimp_1_1_stream_writer_1a9d4c3eb47138d0ec65658eeab2390c83" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; IOStream &gt;</type>
        <definition>std::shared_ptr&lt;IOStream&gt; Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::stream</definition>
        <argsstring></argsstring>
        <name>stream</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="283" column="21" bodyfile="include/assimp/StreamWriter.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a64ca1a79ccbf2033a8ad40c738f02670" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::Flush</definition>
        <argsstring>()</argsstring>
        <name>Flush</name>
        <briefdescription>
<para>Flush the contents of the internal buffer, and the output IOStream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="119" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="119" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1aab96a7cc8e98666e7c7284fa4a1c7eb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::size_t</type>
        <definition>std::size_t Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::GetCurrentPos</definition>
        <argsstring>() const</argsstring>
        <name>GetCurrentPos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="253" column="17" bodyfile="include/assimp/StreamWriter.h" bodystart="253" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a026818c5ac92c5bb130ffe8f08a6bb33" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_assimp_1_1_stream_writer" kindref="compound">StreamWriter</ref> &amp;</type>
        <definition>StreamWriter&amp; Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::operator&lt;&lt;</definition>
        <argsstring>(T f)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>T</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>overload operator&lt;&lt; and allow chaining of MM ops. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="247" column="5" bodyfile="include/assimp/StreamWriter.h" bodystart="247" bodyend="250"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a01df51277efc873d5a54afb868cd786a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::Put</definition>
        <argsstring>(T f)</argsstring>
        <name>Put</name>
        <param>
          <type>T</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Generic write method. </para>
        </briefdescription>
        <detaileddescription>
<para>ByteSwap::Swap(T*) <emphasis>must</emphasis> be defined </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="265" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="265" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1af7ae8e9f6d25b018e1bac13c52f9b300" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutChar</definition>
        <argsstring>(char c)</argsstring>
        <name>PutChar</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Write a single character to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="212" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a7eb11709f122539ee1f1c19b492b3369" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutF4</definition>
        <argsstring>(float f)</argsstring>
        <name>PutF4</name>
        <param>
          <type>float</type>
          <declname>f</declname>
        </param>
        <briefdescription>
<para>Write a float to the stream <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="151" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a92f9639f1a2a91aae1d8cfa30985f63a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutF8</definition>
        <argsstring>(double d)</argsstring>
        <name>PutF8</name>
        <param>
          <type>double</type>
          <declname>d</declname>
        </param>
        <briefdescription>
<para>Write a double to the stream <linebreak/>
 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="158" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a7449a0bc2d87fda3c7f6d961d0317634" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutI1</definition>
        <argsstring>(int8_t n)</argsstring>
        <name>PutI1</name>
        <param>
          <type>int8_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write a signed 8 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="170" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1ab6626d290ad5387a82fa5f43ed2ff3d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutI2</definition>
        <argsstring>(int16_t n)</argsstring>
        <name>PutI2</name>
        <param>
          <type>int16_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write a signed 16 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="164" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a06ce6c4b5a0273d361f2ba88a1288b47" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutI4</definition>
        <argsstring>(int32_t n)</argsstring>
        <name>PutI4</name>
        <param>
          <type>int32_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write an signed 32 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="176" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="176" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a818f43a5b8d61d5fbfe78276762aacb0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutI8</definition>
        <argsstring>(int64_t n)</argsstring>
        <name>PutI8</name>
        <param>
          <type>int64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write a signed 64 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="182" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1abe51bf87c666b018e51cdfb10dd5617c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutString</definition>
        <argsstring>(const aiString &amp;s)</argsstring>
        <name>PutString</name>
        <param>
          <type>const <ref refid="structai_string" kindref="compound">aiString</ref> &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Write an <ref refid="structai_string" kindref="compound">aiString</ref> to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="218" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="218" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a12a384c6b1bd4775381cc5500345bf85" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutString</definition>
        <argsstring>(const std::string &amp;s)</argsstring>
        <name>PutString</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>s</declname>
        </param>
        <briefdescription>
<para>Write a std::string to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="231" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="231" bodyend="240"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1aa0774d2eff8daba80b0cdc6c53281d74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutU1</definition>
        <argsstring>(uint8_t n)</argsstring>
        <name>PutU1</name>
        <param>
          <type>uint8_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write a unsigned 8 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="194" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="194" bodyend="196"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a631e56bbcb0aba8c915aaf892499fa74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutU2</definition>
        <argsstring>(uint16_t n)</argsstring>
        <name>PutU2</name>
        <param>
          <type>uint16_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write a unsigned 16 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="188" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="188" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a75ffee8ed64bd5f929b6582008d2fe92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutU4</definition>
        <argsstring>(uint32_t n)</argsstring>
        <name>PutU4</name>
        <param>
          <type>uint32_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write an unsigned 32 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="200" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a6bc15314ebcfe04944d291be04cdab41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::PutU8</definition>
        <argsstring>(uint64_t n)</argsstring>
        <name>PutU8</name>
        <param>
          <type>uint64_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
<para>Write a unsigned 64 bit integer to the stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="206" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="206" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1af074714f19c215e906bc639f023d34c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>aiReturn Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::Seek</definition>
        <argsstring>(size_t pOffset, aiOrigin pOrigin=aiOrigin_SET)</argsstring>
        <name>Seek</name>
        <param>
          <type>size_t</type>
          <declname>pOffset</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1ac50fbaa57d78776ca99e42104d9b2786" kindref="member">aiOrigin</ref></type>
          <declname>pOrigin</declname>
          <defval><ref refid="types_8h_1ac50fbaa57d78776ca99e42104d9b2786a94a44e681b6c891e39767c518b64b56f" kindref="member">aiOrigin_SET</ref></defval>
        </param>
        <briefdescription>
<para>Seek to the given offset / origin in the output IOStream. </para>
        </briefdescription>
        <detaileddescription>
<para>Flushes the internal buffer and the output IOStream prior to seeking. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="131" column="14" bodyfile="include/assimp/StreamWriter.h" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a49c96becc56cfa1a4344d6415699047f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::SetCurrentPos</definition>
        <argsstring>(std::size_t new_cursor)</argsstring>
        <name>SetCurrentPos</name>
        <param>
          <type>std::size_t</type>
          <declname>new_cursor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="258" column="10" bodyfile="include/assimp/StreamWriter.h" bodystart="258" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a946f0059991dba7d92935993a0629be4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::StreamWriter</definition>
        <argsstring>(IOStream *stream, bool le=false)</argsstring>
        <name>StreamWriter</name>
        <param>
          <type>IOStream *</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>le</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="100" column="5" bodyfile="include/assimp/StreamWriter.h" bodystart="100" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1af64a85ee3044475ae67f556e71d5751a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::StreamWriter</definition>
        <argsstring>(std::shared_ptr&lt; IOStream &gt; stream, bool le=false)</argsstring>
        <name>StreamWriter</name>
        <param>
          <type>std::shared_ptr&lt; IOStream &gt;</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>le</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Construction from a given stream with a well-defined endianness. </para>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="class_assimp_1_1_stream_reader" kindref="compound">StreamReader</ref> holds a permanent strong reference to the stream, which is released upon destruction. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>stream</parametername>
</parameternamelist>
<parameterdescription>
<para>Input stream. The stream is not re-seeked and writing continues at the current position of the stream cursor. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>le</parametername>
</parameternamelist>
<parameterdescription>
<para>If <computeroutput>RuntimeSwitch</computeroutput> is true: specifies whether the stream is in little endian byte order. Otherwise the endianness information is defined by the <computeroutput>SwapEndianess</computeroutput> template parameter and this parameter is meaningless. <linebreak/>
 </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="90" column="5" bodyfile="include/assimp/StreamWriter.h" bodystart="90" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1a54c259336f42a3b930b18257a4389d31" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::Tell</definition>
        <argsstring>()</argsstring>
        <name>Tell</name>
        <briefdescription>
<para>Tell the current position in the output IOStream. </para>
        </briefdescription>
        <detaileddescription>
<para>First flushes the internal buffer and the output IOStream. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="141" column="12" bodyfile="include/assimp/StreamWriter.h" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_stream_writer_1afd8a2bd75786a86416cd6f12a8cc60d7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Assimp::StreamWriter&lt; SwapEndianess, RuntimeSwitch &gt;::~StreamWriter</definition>
        <argsstring>()</argsstring>
        <name>~StreamWriter</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/StreamWriter.h" line="110" column="5" bodyfile="include/assimp/StreamWriter.h" bodystart="110" bodyend="113"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Wrapper class around IOStream to allow for consistent writing of binary data in both little and big endian format. </para>
    </briefdescription>
    <detaileddescription>
<para>Don&apos;t attempt to instance the template directly. Use StreamWriterLE to write to a little-endian stream and StreamWriterBE to write to a BE stream. Alternatively, there is StreamWriterAny if the endianness of the output stream is to be determined at runtime. </para>
    </detaileddescription>
    <location file="include/assimp/StreamWriter.h" line="71" column="1" bodyfile="include/assimp/StreamWriter.h" bodystart="72" bodyend="288"/>
    <listofallmembers>
      <member refid="class_assimp_1_1_stream_writer_1aac1c56adbdf50771a16216bb1640cd7d" prot="private" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>buffer</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a4afc8fee3b43ec8f44119c79e5522e8b" prot="private" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>cursor</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a64ca1a79ccbf2033a8ad40c738f02670" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>Flush</name></member>
      <member refid="class_assimp_1_1_stream_writer_1aab96a7cc8e98666e7c7284fa4a1c7eb6" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>GetCurrentPos</name></member>
      <member refid="class_assimp_1_1_stream_writer_1aa932db86d937bc1bb6a458f1e79c4e9ba763b621e6f3b2cc45d1545a1936a74fa" prot="private" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>INITIAL_CAPACITY</name></member>
      <member refid="class_assimp_1_1_stream_writer_1ab7b318e211f1fb34b19317a1dca05ba6" prot="private" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>le</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a026818c5ac92c5bb130ffe8f08a6bb33" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>operator&lt;&lt;</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a01df51277efc873d5a54afb868cd786a" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>Put</name></member>
      <member refid="class_assimp_1_1_stream_writer_1af7ae8e9f6d25b018e1bac13c52f9b300" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutChar</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a7eb11709f122539ee1f1c19b492b3369" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutF4</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a92f9639f1a2a91aae1d8cfa30985f63a" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutF8</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a7449a0bc2d87fda3c7f6d961d0317634" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutI1</name></member>
      <member refid="class_assimp_1_1_stream_writer_1ab6626d290ad5387a82fa5f43ed2ff3d1" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutI2</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a06ce6c4b5a0273d361f2ba88a1288b47" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutI4</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a818f43a5b8d61d5fbfe78276762aacb0" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutI8</name></member>
      <member refid="class_assimp_1_1_stream_writer_1abe51bf87c666b018e51cdfb10dd5617c" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutString</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a12a384c6b1bd4775381cc5500345bf85" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutString</name></member>
      <member refid="class_assimp_1_1_stream_writer_1aa0774d2eff8daba80b0cdc6c53281d74" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutU1</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a631e56bbcb0aba8c915aaf892499fa74" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutU2</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a75ffee8ed64bd5f929b6582008d2fe92" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutU4</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a6bc15314ebcfe04944d291be04cdab41" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>PutU8</name></member>
      <member refid="class_assimp_1_1_stream_writer_1af074714f19c215e906bc639f023d34c8" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>Seek</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a49c96becc56cfa1a4344d6415699047f" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>SetCurrentPos</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a9d4c3eb47138d0ec65658eeab2390c83" prot="private" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>stream</name></member>
      <member refid="class_assimp_1_1_stream_writer_1af64a85ee3044475ae67f556e71d5751a" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>StreamWriter</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a946f0059991dba7d92935993a0629be4" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>StreamWriter</name></member>
      <member refid="class_assimp_1_1_stream_writer_1a54c259336f42a3b930b18257a4389d31" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>Tell</name></member>
      <member refid="class_assimp_1_1_stream_writer_1afd8a2bd75786a86416cd6f12a8cc60d7" prot="public" virt="non-virtual"><scope>Assimp::StreamWriter</scope><name>~StreamWriter</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
