<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="struct_assimp_1_1_a_s_e_1_1_material" kind="struct" language="C++" prot="public">
    <compoundname>Assimp::ASE::Material</compoundname>
    <basecompoundref refid="struct_assimp_1_1_d3_d_s_1_1_material" prot="public" virt="non-virtual">Assimp::D3DS::Material</basecompoundref>
    <includes local="no">ASEParser.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_assimp_1_1_a_s_e_1_1_material_1a0f3608639329e5535559926b6f05c796" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="struct_assimp_1_1_d3_d_s_1_1_material" kindref="compound">Material</ref> &gt;</type>
        <definition>std::vector&lt;Material&gt; Assimp::ASE::Material::avSubMaterials</definition>
        <argsstring></argsstring>
        <name>avSubMaterials</name>
        <briefdescription>
<para>Contains all sub materials of this material. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="122" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_assimp_1_1_a_s_e_1_1_material_1a954ede7cbd8d15001441556a7db0734e" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool Assimp::ASE::Material::bNeed</definition>
        <argsstring></argsstring>
        <name>bNeed</name>
        <briefdescription>
<para>Can we remove this material? </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="128" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_assimp_1_1_a_s_e_1_1_material_1adb1a52f5e802704b6975a42d0cdf5571" prot="public" static="no" mutable="no">
        <type><ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
        <definition>aiMaterial* Assimp::ASE::Material::pcInstance</definition>
        <argsstring></argsstring>
        <name>pcInstance</name>
        <briefdescription>
<para><ref refid="structai_material" kindref="compound">aiMaterial</ref> object </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="125" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="struct_assimp_1_1_a_s_e_1_1_material_1a842d79d701f19a557f38691ce0741e9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Assimp::ASE::Material::Material</definition>
        <argsstring>()=delete</argsstring>
        <name>Material</name>
        <briefdescription>
<para>Default constructor has been deleted. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_assimp_1_1_a_s_e_1_1_material_1a49e0357a8795d933e9ea1cf6eb0ad835" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Assimp::ASE::Material::Material</definition>
        <argsstring>(const std::string &amp;name)</argsstring>
        <name>Material</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Constructor with explicit name. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="73" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="73" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="struct_assimp_1_1_a_s_e_1_1_material_1a08112448c718451c3827e251ffe61108" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Assimp::ASE::Material::Material</definition>
        <argsstring>(const Material &amp;other)=default</argsstring>
        <name>Material</name>
        <param>
          <type>const <ref refid="struct_assimp_1_1_d3_d_s_1_1_material" kindref="compound">Material</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="struct_assimp_1_1_a_s_e_1_1_material_1a6628a24711831ae4152cd79e1f004821" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Assimp::ASE::Material::Material</definition>
        <argsstring>(Material &amp;&amp;other) AI_NO_EXCEPT</argsstring>
        <name>Material</name>
        <param>
          <type><ref refid="struct_assimp_1_1_d3_d_s_1_1_material" kindref="compound">Material</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Move constructor. This is explicitly written because MSVC doesn&apos;t support defaulting it. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="95" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="95" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="struct_assimp_1_1_a_s_e_1_1_material_1abdec8fd3319e0b92bb82a8832a27d907" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_assimp_1_1_d3_d_s_1_1_material" kindref="compound">Material</ref> &amp;</type>
        <definition>Material&amp; Assimp::ASE::Material::operator=</definition>
        <argsstring>(const Material &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="struct_assimp_1_1_d3_d_s_1_1_material" kindref="compound">Material</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="82" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="82" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="struct_assimp_1_1_a_s_e_1_1_material_1ab9b9a463241328aab3033c8e75b9a74e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="struct_assimp_1_1_d3_d_s_1_1_material" kindref="compound">Material</ref> &amp;</type>
        <definition>Material&amp; Assimp::ASE::Material::operator=</definition>
        <argsstring>(Material &amp;&amp;other) AI_NO_EXCEPT</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="struct_assimp_1_1_d3_d_s_1_1_material" kindref="compound">Material</ref> &amp;&amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="103" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="103" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="struct_assimp_1_1_a_s_e_1_1_material_1add99eb68eb8c02e68d9449e8c26a187e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>Assimp::ASE::Material::~Material</definition>
        <argsstring>()</argsstring>
        <name>~Material</name>
        <reimplements refid="struct_assimp_1_1_d3_d_s_1_1_material_1aa29563622d0413518b4967087965eea1">~Material</reimplements>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="code/AssetLib/ASE/ASEParser.h" line="119" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="119" bodyend="119"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Helper structure representing an <ref refid="namespace_assimp_1_1_a_s_e" kindref="compound">ASE</ref> material. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="436">
        <label>Assimp::ASE::Material</label>
        <link refid="struct_assimp_1_1_a_s_e_1_1_material"/>
        <childnode refid="437" relation="public-inheritance">
        </childnode>
      </node>
      <node id="437">
        <label>Assimp::D3DS::Material</label>
        <link refid="struct_assimp_1_1_d3_d_s_1_1_material"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="438">
        <label>Assimp::ASE::Material</label>
        <link refid="struct_assimp_1_1_a_s_e_1_1_material"/>
        <childnode refid="439" relation="public-inheritance">
        </childnode>
        <childnode refid="442" relation="usage">
          <edgelabel>pcInstance</edgelabel>
        </childnode>
      </node>
      <node id="442">
        <label>aiMaterial</label>
        <link refid="structai_material"/>
      </node>
      <node id="440">
        <label>aiColor3D</label>
        <link refid="structai_color3_d"/>
      </node>
      <node id="439">
        <label>Assimp::D3DS::Material</label>
        <link refid="struct_assimp_1_1_d3_d_s_1_1_material"/>
        <childnode refid="440" relation="usage">
          <edgelabel>mDiffuse</edgelabel>
          <edgelabel>mEmissive</edgelabel>
          <edgelabel>mSpecular</edgelabel>
          <edgelabel>mAmbient</edgelabel>
        </childnode>
        <childnode refid="441" relation="usage">
          <edgelabel>sTexAmbient</edgelabel>
          <edgelabel>sTexBump</edgelabel>
          <edgelabel>sTexSpecular</edgelabel>
          <edgelabel>sTexEmissive</edgelabel>
          <edgelabel>sTexShininess</edgelabel>
          <edgelabel>sTexReflective</edgelabel>
          <edgelabel>sTexOpacity</edgelabel>
          <edgelabel>sTexDiffuse</edgelabel>
        </childnode>
      </node>
      <node id="441">
        <label>Assimp::D3DS::Texture</label>
        <link refid="struct_assimp_1_1_d3_d_s_1_1_texture"/>
      </node>
    </collaborationgraph>
    <location file="code/AssetLib/ASE/ASEParser.h" line="68" column="1" bodyfile="code/AssetLib/ASE/ASEParser.h" bodystart="68" bodyend="129"/>
    <listofallmembers>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1a0f3608639329e5535559926b6f05c796" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>avSubMaterials</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1a954ede7cbd8d15001441556a7db0734e" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>bNeed</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a19a6724a73fbb65b77c7eb45d0a6675c" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mAmbient</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1a842d79d701f19a557f38691ce0741e9d" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>Material</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1a49e0357a8795d933e9ea1cf6eb0ad835" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>Material</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1a08112448c718451c3827e251ffe61108" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>Material</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1a6628a24711831ae4152cd79e1f004821" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>Material</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a937ca838354544ac68edae03a6b4425b" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mBumpHeight</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a75a4a28e7758b9714068159492ef1d0e" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mDiffuse</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a8f7dceae92cf6372e016415540878a2b" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mEmissive</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a64477f6ef97e8ba18151c45c4ffb57ee" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mName</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a1088fb81db856de8d96de8f5c93de070" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mShading</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1abe846bb2800baf338ea214cae627f993" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mShininessStrength</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a8a47949bebd01b099b1dbb72a79bcd5a" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mSpecular</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1ab854655128922de6b396cd1fff3e652b" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mSpecularExponent</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1add0008029c7488e3014a3127ca2cd933" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mTransparency</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1acaee95982b7ec607075fd147524dd20c" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>mTwoSided</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1abdec8fd3319e0b92bb82a8832a27d907" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>operator=</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1ab9b9a463241328aab3033c8e75b9a74e" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>operator=</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1adb1a52f5e802704b6975a42d0cdf5571" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>pcInstance</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a429d8524c3df5f0c16bda979cb0640ce" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexAmbient</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a50203aa846a0ae3412c7ac588a28724e" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexBump</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a09393afff45a98fc88471137312b4edf" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexDiffuse</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a2fced9fe74d65634c14bee585d9c1b72" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexEmissive</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a18bac7065d5301053640b9de8f915050" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexOpacity</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a501314f12f2b86aa85f761ffa99ddf14" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexReflective</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1a8a576920692847c9d388cdb14150d3c8" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexShininess</name></member>
      <member refid="struct_assimp_1_1_d3_d_s_1_1_material_1abb09dd6a6470fe11bf835ac4ffcf0082" prot="public" virt="non-virtual"><scope>Assimp::ASE::Material</scope><name>sTexSpecular</name></member>
      <member refid="struct_assimp_1_1_a_s_e_1_1_material_1add99eb68eb8c02e68d9449e8c26a187e" prot="public" virt="virtual"><scope>Assimp::ASE::Material</scope><name>~Material</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
