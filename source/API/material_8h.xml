<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="material_8h" kind="file" language="C++">
    <compoundname>material.h</compoundname>
    <includes refid="types_8h" local="no">assimp/types.h</includes>
    <includes refid="pushpack1_8h" local="yes">./Compiler/pushpack1.h</includes>
    <includes refid="poppack1_8h" local="yes">./Compiler/poppack1.h</includes>
    <includes refid="material_8inl" local="yes">material.inl</includes>
    <includedby refid="scene_8h" local="no">scene.h</includedby>
    <incdepgraph>
      <node id="15">
        <label>assimp/matrix4x4.h</label>
        <link refid="matrix4x4_8h"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>assimp/vector3.h</label>
        <link refid="vector3_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>material.h</label>
        <link refid="material_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
      </node>
      <node id="20">
        <label>./Compiler/pushpack1.h</label>
        <link refid="pushpack1_8h"/>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="2">
        <label>assimp/types.h</label>
        <link refid="types_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="14">
        <label>assimp/matrix3x3.h</label>
        <link refid="matrix3x3_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="19">
        <label>string</label>
      </node>
      <node id="4">
        <label>stddef.h</label>
      </node>
      <node id="9">
        <label>assimp/config.h</label>
        <link refid="config_8h"/>
      </node>
      <node id="3">
        <label>limits.h</label>
      </node>
      <node id="7">
        <label>sys/types.h</label>
      </node>
      <node id="6">
        <label>string.h</label>
      </node>
      <node id="16">
        <label>assimp/quaternion.h</label>
        <link refid="quaternion_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>assimp/defs.h</label>
        <link refid="defs_8h"/>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>new</label>
      </node>
      <node id="13">
        <label>assimp/color4.h</label>
        <link refid="color4_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>assimp/vector2.h</label>
        <link refid="vector2_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>cstring</label>
      </node>
      <node id="21">
        <label>./Compiler/poppack1.h</label>
        <link refid="poppack1_8h"/>
      </node>
      <node id="22">
        <label>material.inl</label>
        <link refid="material_8inl"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>material.h</label>
        <link refid="material_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>scene.h</label>
        <link refid="scene_8h"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structai_material" prot="public">aiMaterial</innerclass>
    <innerclass refid="structai_u_v_transform" prot="public">aiUVTransform</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="material_8h_1a33e111ac1601d2f4225dc135fbb48d20" prot="public" static="no">
        <name>AI_DEFAULT_MATERIAL_NAME</name>
        <initializer>&quot;DefaultMaterial&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="60" column="9" bodyfile="include/assimp/material.h" bodystart="60" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1abf76a603ad84c28e2ab359690fc2e2a2" prot="public" static="no">
        <name>AI_MATERIAL_H_INC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="47" column="9" bodyfile="include/assimp/material.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a7fc2f3682298acd5345cbdcaad559576" prot="public" static="no">
        <name>AI_MATKEY_BASE_COLOR</name>
        <initializer>&quot;$clr.base&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="982" column="9" bodyfile="include/assimp/material.h" bodystart="982" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a81edbf75172f38d60940fa4c141cd28a" prot="public" static="no">
        <name>AI_MATKEY_BASE_COLOR_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5d752b64d94439eadbb815e8a35d4fc0" kindref="member">aiTextureType_BASE_COLOR</ref>, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="983" column="9" bodyfile="include/assimp/material.h" bodystart="983" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a7e4425c7ac9ca7fc5dfd57069a0839dc" prot="public" static="no">
        <name>AI_MATKEY_BLEND_FUNC</name>
        <initializer>&quot;$mat.blend&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="948" column="9" bodyfile="include/assimp/material.h" bodystart="948" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ad7b83413141c34520c8237989f03ff97" prot="public" static="no">
        <name>AI_MATKEY_BUMPSCALING</name>
        <initializer>&quot;$mat.bumpscaling&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="951" column="9" bodyfile="include/assimp/material.h" bodystart="951" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1adffd0089f7f6ece43b0db3c43c190e1e" prot="public" static="no">
        <name>AI_MATKEY_CLEARCOAT_FACTOR</name>
        <initializer>&quot;$mat.clearcoat.factor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1016" column="9" bodyfile="include/assimp/material.h" bodystart="1016" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a9c77ddf25334ea48a2b3d7ed9bed1d93" prot="public" static="no">
        <name>AI_MATKEY_CLEARCOAT_NORMAL_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a4c8443070acff2892a377aeb022e273f" kindref="member">aiTextureType_CLEARCOAT</ref>, 2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1020" column="9" bodyfile="include/assimp/material.h" bodystart="1020" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a6aca1cb9f89f425194057a7b5ba81e6e" prot="public" static="no">
        <name>AI_MATKEY_CLEARCOAT_ROUGHNESS_FACTOR</name>
        <initializer>&quot;$mat.clearcoat.roughnessFactor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1017" column="9" bodyfile="include/assimp/material.h" bodystart="1017" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ac787e0f5481016d0e0784f358f06ec3e" prot="public" static="no">
        <name>AI_MATKEY_CLEARCOAT_ROUGHNESS_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a4c8443070acff2892a377aeb022e273f" kindref="member">aiTextureType_CLEARCOAT</ref>, 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1019" column="9" bodyfile="include/assimp/material.h" bodystart="1019" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ade3d02a8519e27eade6694f70b3d0250" prot="public" static="no">
        <name>AI_MATKEY_CLEARCOAT_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a4c8443070acff2892a377aeb022e273f" kindref="member">aiTextureType_CLEARCOAT</ref>, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1018" column="9" bodyfile="include/assimp/material.h" bodystart="1018" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a9eafa221e27df9699e0eb00eb1a3066b" prot="public" static="no">
        <name>AI_MATKEY_COLOR_AMBIENT</name>
        <initializer>&quot;$clr.ambient&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="957" column="9" bodyfile="include/assimp/material.h" bodystart="957" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a08fcffadf01a260cc23bf52ae4fe5cfa" prot="public" static="no">
        <name>AI_MATKEY_COLOR_DIFFUSE</name>
        <initializer>&quot;$clr.diffuse&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="956" column="9" bodyfile="include/assimp/material.h" bodystart="956" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1abba65fc970242f5b9ea522a1d70aecb0" prot="public" static="no">
        <name>AI_MATKEY_COLOR_EMISSIVE</name>
        <initializer>&quot;$clr.emissive&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="959" column="9" bodyfile="include/assimp/material.h" bodystart="959" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a5c99b4bae9e84aa25d350885aa0e10f6" prot="public" static="no">
        <name>AI_MATKEY_COLOR_REFLECTIVE</name>
        <initializer>&quot;$clr.reflective&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="961" column="9" bodyfile="include/assimp/material.h" bodystart="961" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1aafddb672f0dec60f818090e34edf9470" prot="public" static="no">
        <name>AI_MATKEY_COLOR_SPECULAR</name>
        <initializer>&quot;$clr.specular&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="958" column="9" bodyfile="include/assimp/material.h" bodystart="958" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1af13855becf821e81e6b6f9d14fee9102" prot="public" static="no">
        <name>AI_MATKEY_COLOR_TRANSPARENT</name>
        <initializer>&quot;$clr.transparent&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="960" column="9" bodyfile="include/assimp/material.h" bodystart="960" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a2586aadc8996fc7c3abfd6e58501c86d" prot="public" static="no">
        <name>AI_MATKEY_EMISSIVE_INTENSITY</name>
        <initializer>&quot;$mat.emissiveIntensity&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1034" column="9" bodyfile="include/assimp/material.h" bodystart="1034" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a9e1f48a181e0d275a1d24031bc62d8df" prot="public" static="no">
        <name>AI_MATKEY_ENABLE_WIREFRAME</name>
        <initializer>&quot;$mat.wireframe&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="947" column="9" bodyfile="include/assimp/material.h" bodystart="947" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a4bb3a224b20fa437fe06b2b562181320" prot="public" static="no">
        <name>AI_MATKEY_GLOBAL_BACKGROUND_IMAGE</name>
        <initializer>&quot;?bg.global&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="962" column="9" bodyfile="include/assimp/material.h" bodystart="962" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a0d6a1f56cd2d459fe8290ad70e833673" prot="public" static="no">
        <name>AI_MATKEY_GLOBAL_SHADERLANG</name>
        <initializer>&quot;?sh.lang&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="963" column="9" bodyfile="include/assimp/material.h" bodystart="963" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a82dd85f51f507e18d101508c48e9d84d" prot="public" static="no">
        <name>AI_MATKEY_GLOSSINESS_FACTOR</name>
        <initializer>&quot;$mat.glossinessFactor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1002" column="9" bodyfile="include/assimp/material.h" bodystart="1002" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1af72d0714d106aa52da2dbdf10d975c54" prot="public" static="no">
        <name>AI_MATKEY_MAPPING</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_MAPPING_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1171" column="9" bodyfile="include/assimp/material.h" bodystart="1171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ad14ef903b582e699d9b02668084dbbd5" prot="public" static="no">
        <name>AI_MATKEY_MAPPINGMODE_U</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_MAPPINGMODE_U_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1249" column="9" bodyfile="include/assimp/material.h" bodystart="1249" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ad22f63a46460837263635d44ea598dfa" prot="public" static="no">
        <name>AI_MATKEY_MAPPINGMODE_V</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_MAPPINGMODE_V_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1288" column="9" bodyfile="include/assimp/material.h" bodystart="1288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a272a656cf0b14d5e541f9b90ef49139b" prot="public" static="no">
        <name>AI_MATKEY_METALLIC_FACTOR</name>
        <initializer>&quot;$mat.metallicFactor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="986" column="9" bodyfile="include/assimp/material.h" bodystart="986" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a94b7b9569f828532ee1328b5b0a7240d" prot="public" static="no">
        <name>AI_MATKEY_METALLIC_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a102addc15801212fb74d821cf6556bcd" kindref="member">aiTextureType_METALNESS</ref>, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="987" column="9" bodyfile="include/assimp/material.h" bodystart="987" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a204a0a39264125e160bd8fb2117f06e9" prot="public" static="no">
        <name>AI_MATKEY_NAME</name>
        <initializer>&quot;?mat.name&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="944" column="9" bodyfile="include/assimp/material.h" bodystart="944" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a6f5fa84f7ac0a41a1a860edf1904070a" prot="public" static="no">
        <name>AI_MATKEY_OPACITY</name>
        <initializer>&quot;$mat.opacity&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="949" column="9" bodyfile="include/assimp/material.h" bodystart="949" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ab6d31302ff56e9fcf9c38e10f806f9a3" prot="public" static="no">
        <name>AI_MATKEY_REFLECTIVITY</name>
        <initializer>&quot;$mat.reflectivity&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="953" column="9" bodyfile="include/assimp/material.h" bodystart="953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a0ae62b692c409cdc82a1ab111fc27017" prot="public" static="no">
        <name>AI_MATKEY_REFRACTI</name>
        <initializer>&quot;$mat.refracti&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="955" column="9" bodyfile="include/assimp/material.h" bodystart="955" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1adf16a6645628377f2dd217b4d296ddbb" prot="public" static="no">
        <name>AI_MATKEY_ROUGHNESS_FACTOR</name>
        <initializer>&quot;$mat.roughnessFactor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="990" column="9" bodyfile="include/assimp/material.h" bodystart="990" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a6c7d89d8fa7a16e841fb075999afaa4b" prot="public" static="no">
        <name>AI_MATKEY_ROUGHNESS_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a3be75e9bfee00f0df2a715ca27fcebc6" kindref="member">aiTextureType_DIFFUSE_ROUGHNESS</ref>, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="991" column="9" bodyfile="include/assimp/material.h" bodystart="991" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a0c8043a353459f3a4d3a16ef1ac30d14" prot="public" static="no">
        <name>AI_MATKEY_SHADER_COMPUTE</name>
        <initializer>&quot;?sh.cs&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="969" column="9" bodyfile="include/assimp/material.h" bodystart="969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ae89de5585c3c922bbb48f87480515ba7" prot="public" static="no">
        <name>AI_MATKEY_SHADER_FRAGMENT</name>
        <initializer>&quot;?sh.fs&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="965" column="9" bodyfile="include/assimp/material.h" bodystart="965" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a4cfa61b76e9e363ee69281187da9e812" prot="public" static="no">
        <name>AI_MATKEY_SHADER_GEO</name>
        <initializer>&quot;?sh.gs&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="966" column="9" bodyfile="include/assimp/material.h" bodystart="966" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a64209b3aaf9e41e0c6fc3c5d4b994c03" prot="public" static="no">
        <name>AI_MATKEY_SHADER_PRIMITIVE</name>
        <initializer>&quot;?sh.ps&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="968" column="9" bodyfile="include/assimp/material.h" bodystart="968" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1abf174cf7895c4a25887c95e0dd5046be" prot="public" static="no">
        <name>AI_MATKEY_SHADER_TESSELATION</name>
        <initializer>&quot;?sh.ts&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="967" column="9" bodyfile="include/assimp/material.h" bodystart="967" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1aeafb498f233e6b3514bdf7ae75022128" prot="public" static="no">
        <name>AI_MATKEY_SHADER_VERTEX</name>
        <initializer>&quot;?sh.vs&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="964" column="9" bodyfile="include/assimp/material.h" bodystart="964" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a0f7ec9923cf262ba5b74d3c52bc588a1" prot="public" static="no">
        <name>AI_MATKEY_SHADING_MODEL</name>
        <initializer>&quot;$mat.shadingm&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="946" column="9" bodyfile="include/assimp/material.h" bodystart="946" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ad20fd594f4100adfb03a22b41a6c37d8" prot="public" static="no">
        <name>AI_MATKEY_SHEEN_COLOR_FACTOR</name>
        <initializer>&quot;$clr.sheen.factor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1007" column="9" bodyfile="include/assimp/material.h" bodystart="1007" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a3696a53dd469b9cacf1c7c705672f4dc" prot="public" static="no">
        <name>AI_MATKEY_SHEEN_COLOR_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a2534326d369dc2b340ac0c23a9405c0a" kindref="member">aiTextureType_SHEEN</ref>, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1010" column="9" bodyfile="include/assimp/material.h" bodystart="1010" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a541402cf257f00e5efbba999f9848e73" prot="public" static="no">
        <name>AI_MATKEY_SHEEN_ROUGHNESS_FACTOR</name>
        <initializer>&quot;$mat.sheen.roughnessFactor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1009" column="9" bodyfile="include/assimp/material.h" bodystart="1009" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a9b37b03123eac41f43b33e50a730e726" prot="public" static="no">
        <name>AI_MATKEY_SHEEN_ROUGHNESS_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a2534326d369dc2b340ac0c23a9405c0a" kindref="member">aiTextureType_SHEEN</ref>, 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1011" column="9" bodyfile="include/assimp/material.h" bodystart="1011" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1aeb1edba2c1e099a0a7055a82cabc9e87" prot="public" static="no">
        <name>AI_MATKEY_SHININESS</name>
        <initializer>&quot;$mat.shininess&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="952" column="9" bodyfile="include/assimp/material.h" bodystart="952" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a8cbc5193d8836369d9bf9907628d4f4d" prot="public" static="no">
        <name>AI_MATKEY_SHININESS_STRENGTH</name>
        <initializer>&quot;$mat.shinpercent&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="954" column="9" bodyfile="include/assimp/material.h" bodystart="954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ae52aa158d61e2f38a0f2fdc3acb5bda9" prot="public" static="no">
        <name>AI_MATKEY_SPECULAR_FACTOR</name>
        <initializer>&quot;$mat.specularFactor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1000" column="9" bodyfile="include/assimp/material.h" bodystart="1000" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a11114b16a60c7eb4ac52b9b912975fc1" prot="public" static="no">
        <name>AI_MATKEY_TEXBLEND</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_TEXBLEND_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1210" column="9" bodyfile="include/assimp/material.h" bodystart="1210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a69577e4366cceb502288474cf8cf2dab" prot="public" static="no">
        <name>AI_MATKEY_TEXFLAGS</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_TEXFLAGS_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1408" column="9" bodyfile="include/assimp/material.h" bodystart="1408" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ac5196536562f8e9cacb224655e9c8505" prot="public" static="no">
        <name>AI_MATKEY_TEXMAP_AXIS</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_TEXMAP_AXIS_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1327" column="9" bodyfile="include/assimp/material.h" bodystart="1327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a9e96d9483020708312ed8d6cc80ccbda" prot="public" static="no">
        <name>AI_MATKEY_TEXOP</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_TEXOP_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1132" column="9" bodyfile="include/assimp/material.h" bodystart="1132" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a18c395e1dd733f94d36353956a12776f" prot="public" static="no">
        <name>AI_MATKEY_TEXTURE</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_TEXTURE_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1053" column="9" bodyfile="include/assimp/material.h" bodystart="1053" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a81dfb802f25696cb970f0f0f4ea7a38f" prot="public" static="no">
        <name>AI_MATKEY_TRANSMISSION_FACTOR</name>
        <initializer>&quot;$mat.transmission.factor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1026" column="9" bodyfile="include/assimp/material.h" bodystart="1026" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a01a4a196e0a4cfe4c2bcb38b07341f24" prot="public" static="no">
        <name>AI_MATKEY_TRANSMISSION_TEXTURE</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5012d291ed3b5fc6f4ebba375b5fa74a" kindref="member">aiTextureType_TRANSMISSION</ref>, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1029" column="9" bodyfile="include/assimp/material.h" bodystart="1029" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1aec4b15bb56f25baf7434fb2eec4b3cd1" prot="public" static="no">
        <name>AI_MATKEY_TRANSPARENCYFACTOR</name>
        <initializer>&quot;$mat.transparencyfactor&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="950" column="9" bodyfile="include/assimp/material.h" bodystart="950" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1acbf2a89c0a149ae8727c451756038261" prot="public" static="no">
        <name>AI_MATKEY_TWOSIDED</name>
        <initializer>&quot;$mat.twosided&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="945" column="9" bodyfile="include/assimp/material.h" bodystart="945" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a80d02d1302eb52701a5b22fe2d1cc8ee" prot="public" static="no">
        <name>AI_MATKEY_USE_AO_MAP</name>
        <initializer>&quot;$mat.useAOMap&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1035" column="9" bodyfile="include/assimp/material.h" bodystart="1035" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a33deb03ba242de1bfcb763c037a632da" prot="public" static="no">
        <name>AI_MATKEY_USE_COLOR_MAP</name>
        <initializer>&quot;$mat.useColorMap&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="975" column="9" bodyfile="include/assimp/material.h" bodystart="975" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a180f5dc05e0381b64bbfc52991a068bb" prot="public" static="no">
        <name>AI_MATKEY_USE_EMISSIVE_MAP</name>
        <initializer>&quot;$mat.useEmissiveMap&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1033" column="9" bodyfile="include/assimp/material.h" bodystart="1033" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ad445383c9f22c7266897e6cba7122a34" prot="public" static="no">
        <name>AI_MATKEY_USE_METALLIC_MAP</name>
        <initializer>&quot;$mat.useMetallicMap&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="984" column="9" bodyfile="include/assimp/material.h" bodystart="984" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a687afea7bbf5ffce044d086430a456ae" prot="public" static="no">
        <name>AI_MATKEY_USE_ROUGHNESS_MAP</name>
        <initializer>&quot;$mat.useRoughnessMap&quot;, 0, 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="988" column="9" bodyfile="include/assimp/material.h" bodystart="988" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1ab24f58c983cf26acc9389ed2530316a9" prot="public" static="no">
        <name>AI_MATKEY_UVTRANSFORM</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_UVTRANSFORM_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1366" column="9" bodyfile="include/assimp/material.h" bodystart="1366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1a96d4efa89610210ec608cf761694f5de" prot="public" static="no">
        <name>AI_MATKEY_UVWSRC</name>
        <param><defname>type</defname></param>
        <param><defname>N</defname></param>
        <initializer>_AI_MATKEY_UVWSRC_BASE, type, N</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1093" column="9" bodyfile="include/assimp/material.h" bodystart="1093" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="material_8h_1aad2af35b67a721641993230edf019b47" prot="public" static="no">
        <name>AI_TEXTURE_TYPE_MAX</name>
        <initializer><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a435cc5adea69c96c0c3205a2bde21cce" kindref="member">aiTextureType_UNKNOWN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="334" column="9" bodyfile="include/assimp/material.h" bodystart="334" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="material_8h_1ae1236da1ccfbf4f23bb490287a4d61ac" prot="public" static="no" strong="no">
        <type></type>
        <name>aiBlendMode</name>
        <enumvalue id="material_8h_1ae1236da1ccfbf4f23bb490287a4d61aca2df47d5d42d73938d3d273a75db671b0" prot="public">
          <name>aiBlendMode_Default</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
<para>Formula: </para>
          </briefdescription>
          <detaileddescription>
<para><programlisting><codeline><highlight class="normal">SourceColor*SourceAlpha<sp/>+<sp/>DestColor*(1-SourceAlpha)</highlight></codeline>
</programlisting> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1ae1236da1ccfbf4f23bb490287a4d61aca60eb5958c8fd4147bafd9098edf54e1e" prot="public">
          <name>aiBlendMode_Additive</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>Additive blending. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Formula:
@code
SourceColor*1 + DestColor*1
@endcode
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1ae1236da1ccfbf4f23bb490287a4d61aca75430f7adb68b57be3892d40720f2982" prot="public">
          <name>_aiBlendMode_Force32Bit</name>
          <initializer>= INT_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines alpha-blend flags. </para>
        </briefdescription>
        <detaileddescription>
<para>If you&apos;re familiar with OpenGL or D3D, these flags aren&apos;t new to you. They define <emphasis>how</emphasis> the final color value of a pixel is computed, basing on the previous color at that pixel and the new color value from the material. The blend formula is: <programlisting><codeline><highlight class="normal">SourceColor<sp/>*<sp/>SourceBlend<sp/>+<sp/>DestColor<sp/>*<sp/>DestBlend</highlight></codeline>
</programlisting> where DestColor is the previous color in the frame-buffer at this position and SourceColor is the material color before the transparency calculation.<linebreak/>
 This corresponds to the <ref refid="material_8h_1a7e4425c7ac9ca7fc5dfd57069a0839dc" kindref="member">AI_MATKEY_BLEND_FUNC</ref> property. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="482" column="1" bodyfile="include/assimp/material.h" bodystart="482" bodyend="506"/>
      </memberdef>
      <memberdef kind="enum" id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cf" prot="public" static="no" strong="no">
        <type></type>
        <name>aiShadingMode</name>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa59fa2c27721e28dadd58cbd39cd46782" prot="public">
          <name>aiShadingMode_Flat</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>Flat shading. </para>
          </briefdescription>
          <detaileddescription>
<para>Shading is done on per-face base, diffuse only. Also known as &apos;faceted shading&apos;. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa8a20ae47f38c01554ef467c324c27431" prot="public">
          <name>aiShadingMode_Gouraud</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
<para>Simple Gouraud shading. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfafe5e89f846a9657232077c224fd1a914" prot="public">
          <name>aiShadingMode_Phong</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
<para>Phong-Shading -. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfaccd4aca098e73986e50c7566efd6ca1f" prot="public">
          <name>aiShadingMode_Blinn</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
<para>Phong-Blinn-Shading. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa85c7b6a3c243a1991f4b17125a28a54c" prot="public">
          <name>aiShadingMode_Toon</name>
          <initializer>= 0x5</initializer>
          <briefdescription>
<para>Toon-Shading per pixel. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Also known as &apos;comic&apos; shader.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfab2243130ec0bdb25a26ce829d486e55a" prot="public">
          <name>aiShadingMode_OrenNayar</name>
          <initializer>= 0x6</initializer>
          <briefdescription>
<para>OrenNayar-Shading per pixel. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Extension to standard Lambertian shading, taking the
roughness of the material into account
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa0947dbe335c16766da43fe1b992af4fb" prot="public">
          <name>aiShadingMode_Minnaert</name>
          <initializer>= 0x7</initializer>
          <briefdescription>
<para>Minnaert-Shading per pixel. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Extension to standard Lambertian shading, taking the
&quot;darkness&quot; of the material into account
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa36519b85cbfbba437bfe1c504d3dbd6d" prot="public">
          <name>aiShadingMode_CookTorrance</name>
          <initializer>= 0x8</initializer>
          <briefdescription>
<para>CookTorrance-Shading per pixel. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Special shader for metallic surfaces.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa625d6dc1a678985000a1e3a9c7da1e3f" prot="public">
          <name>aiShadingMode_NoShading</name>
          <initializer>= 0x9</initializer>
          <briefdescription>
<para>No shading at all. </para>
          </briefdescription>
          <detaileddescription>
<para>Constant light influence of 1.0. Also known as &quot;Unlit&quot; </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa24be16c9bd26f4f3d5d493881dcc1ec1" prot="public">
          <name>aiShadingMode_Unlit</name>
          <initializer>= aiShadingMode_NoShading</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfab2f24381f6f4f21cee9cef32c1fd4d5f" prot="public">
          <name>aiShadingMode_Fresnel</name>
          <initializer>= 0xa</initializer>
          <briefdescription>
<para>Fresnel shading. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa0b3fe30914cb8961c68b0faa888a8be1" prot="public">
          <name>aiShadingMode_PBR_BRDF</name>
          <initializer>= 0xb</initializer>
          <briefdescription>
<para>Physically-Based Rendering (PBR) shading using Bidirectional scattering/reflectance distribution function (BSDF/BRDF) There are multiple methods under this banner, and model files may provide data for more than one PBR-BRDF method. </para>
          </briefdescription>
          <detaileddescription>
<para>Applications should use the set of provided properties to determine which of their preferred PBR rendering methods are likely to be available eg:<itemizedlist>
<listitem><para>If AI_MATKEY_METALLIC_FACTOR is set, then a Metallic/Roughness is available</para>
</listitem><listitem><para>If AI_MATKEY_GLOSSINESS_FACTOR is set, then a Specular/Glossiness is available Note that some PBR methods allow layering of techniques </para>
</listitem></itemizedlist>
</para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfaa33165721a2d89fde364b76fe2da3d00" prot="public">
          <name>_aiShadingMode_Force32Bit</name>
          <initializer>= INT_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines all shading models supported by the library. </para>
        </briefdescription>
        <detaileddescription>
<para>Property: <ref refid="material_8h_1a0f7ec9923cf262ba5b74d3c52bc588a1" kindref="member">AI_MATKEY_SHADING_MODEL</ref></para>
<para>The list of shading modes has been taken from Blender. See Blender documentation for more information. The API does not distinguish between &quot;specular&quot; and &quot;diffuse&quot; shaders (thus the specular term for diffuse shading models like Oren-Nayar remains undefined). <linebreak/>
 Again, this value is just a hint. <ref refid="namespace_assimp" kindref="compound">Assimp</ref> tries to select the shader whose most common implementation matches the original rendering results of the 3D modeler which wrote a particular model as closely as possible. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="355" column="1" bodyfile="include/assimp/material.h" bodystart="355" bodyend="425"/>
      </memberdef>
      <memberdef kind="enum" id="material_8h_1a6d003e078617e4e80d1313a6250b2dfd" prot="public" static="no" strong="no">
        <type></type>
        <name>aiTextureFlags</name>
        <enumvalue id="material_8h_1a6d003e078617e4e80d1313a6250b2dfda2d22809697f40ef1969a491a8d3278ff" prot="public">
          <name>aiTextureFlags_Invert</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>The texture&apos;s color values have to be inverted (component-wise 1-n) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6d003e078617e4e80d1313a6250b2dfda5712da7264ec0c6e90b45580e5badbe0" prot="public">
          <name>aiTextureFlags_UseAlpha</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
<para>Explicit request to the application to process the alpha channel of the texture. </para>
          </briefdescription>
          <detaileddescription>
<para>Mutually exclusive with <ref refid="material_8h_1a6d003e078617e4e80d1313a6250b2dfda78f2667e8304213210c2508b7af47499" kindref="member">aiTextureFlags_IgnoreAlpha</ref>. These flags are set if the library can say for sure that the alpha channel is used/is not used. If the model format does not define this, it is left to the application to decide whether the texture alpha channel - if any - is evaluated or not. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6d003e078617e4e80d1313a6250b2dfda78f2667e8304213210c2508b7af47499" prot="public">
          <name>aiTextureFlags_IgnoreAlpha</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
<para>Explicit request to the application to ignore the alpha channel of the texture. </para>
          </briefdescription>
          <detaileddescription>
<para>Mutually exclusive with <ref refid="material_8h_1a6d003e078617e4e80d1313a6250b2dfda5712da7264ec0c6e90b45580e5badbe0" kindref="member">aiTextureFlags_UseAlpha</ref>. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6d003e078617e4e80d1313a6250b2dfdabdc67fee0727d08bd17135d58f67cdd6" prot="public">
          <name>_aiTextureFlags_Force32Bit</name>
          <initializer>= INT_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines some mixed flags for a particular texture. </para>
        </briefdescription>
        <detaileddescription>
<para>Usually you&apos;ll instruct your cg artists how textures have to look like ... and how they will be processed in your application. However, if you use <ref refid="namespace_assimp" kindref="compound">Assimp</ref> for completely generic loading purposes you might also need to process these flags in order to display as many &apos;unknown&apos; 3D models as possible correctly.</para>
<para>This corresponds to the <ref refid="material_8h_1a69577e4366cceb502288474cf8cf2dab" kindref="member">AI_MATKEY_TEXFLAGS</ref> property. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="438" column="1" bodyfile="include/assimp/material.h" bodystart="438" bodyend="464"/>
      </memberdef>
      <memberdef kind="enum" id="material_8h_1a6cbe56056751aa80e8dd714632a49de0" prot="public" static="no" strong="no">
        <type></type>
        <name>aiTextureMapMode</name>
        <enumvalue id="material_8h_1a6cbe56056751aa80e8dd714632a49de0a39bee4a4d7222d7f21fc093cacac2bcf" prot="public">
          <name>aiTextureMapMode_Wrap</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
<para>A texture coordinate u|v is translated to u%1|v%1. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6cbe56056751aa80e8dd714632a49de0a809e31ce25b28e9fb7dba0a362293ace" prot="public">
          <name>aiTextureMapMode_Clamp</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>Texture coordinates outside [0...1] are clamped to the nearest valid value. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6cbe56056751aa80e8dd714632a49de0a36bdbb449ea382cf7d3ecd7ccbd9c3e8" prot="public">
          <name>aiTextureMapMode_Decal</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
<para>If the texture coordinates for a pixel are outside [0...1] the texture is not applied to that pixel. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6cbe56056751aa80e8dd714632a49de0ae0105c73fb2e7e6d10e80395b6995337" prot="public">
          <name>aiTextureMapMode_Mirror</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
<para>A texture coordinate u|v becomes u%1|v%1 if (u-(u%1))%2 is zero and 1-(u%1)|1-(v%1) otherwise. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6cbe56056751aa80e8dd714632a49de0afcec988b7883a042f9ff9f80823da2c0" prot="public">
          <name>_aiTextureMapMode_Force32Bit</name>
          <initializer>= INT_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines how UV coordinates outside the [0...1] range are handled. </para>
        </briefdescription>
        <detaileddescription>
<para>Commonly referred to as &apos;wrapping mode&apos;. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="110" column="1" bodyfile="include/assimp/material.h" bodystart="110" bodyend="133"/>
      </memberdef>
      <memberdef kind="enum" id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9" prot="public" static="no" strong="no">
        <type></type>
        <name>aiTextureMapping</name>
        <enumvalue id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9afe4af8e2f0303198ff2c51edf3039277" prot="public">
          <name>aiTextureMapping_UV</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
<para>The mapping coordinates are taken from an UV channel. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>#AI_MATKEY_UVWSRC property specifies from which UV channel
the texture coordinates are to be taken from (remember,
meshes can have more than one UV channel).
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9ada83cfca5e55fc99dc89e0e94c91cdb5" prot="public">
          <name>aiTextureMapping_SPHERE</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>Spherical mapping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9a1f3e2bcbdb450f19666b9b0730bad9ae" prot="public">
          <name>aiTextureMapping_CYLINDER</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
<para>Cylindrical mapping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9ac680b16f3be94f101132982afd003fee" prot="public">
          <name>aiTextureMapping_BOX</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
<para>Cubic mapping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9acbb0fa22c77e4c8936c1071fcacd1a64" prot="public">
          <name>aiTextureMapping_PLANE</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
<para>Planar mapping. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9a585fb9423e1e77a52c9096fc0b907881" prot="public">
          <name>aiTextureMapping_OTHER</name>
          <initializer>= 0x5</initializer>
          <briefdescription>
<para>Undefined mapping. </para>
          </briefdescription>
          <detaileddescription>
<para>Have fun. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9a26d999203feb901a0b17e4babe9b9791" prot="public">
          <name>_aiTextureMapping_Force32Bit</name>
          <initializer>= INT_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines how the mapping coords for a texture are generated. </para>
        </briefdescription>
        <detaileddescription>
<para>Real-time applications typically require full UV coordinates, so the use of the aiProcess_GenUVCoords step is highly recommended. It generates proper UV channels for non-UV mapped objects, as long as an accurate description how the mapping should look like (e.g spherical) is given. See the <ref refid="material_8h_1af72d0714d106aa52da2dbdf10d975c54" kindref="member">AI_MATKEY_MAPPING</ref> property for more details. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="144" column="1" bodyfile="include/assimp/material.h" bodystart="144" bodyend="171"/>
      </memberdef>
      <memberdef kind="enum" id="material_8h_1afcd3096d69affba13114cedfc6f9ee6b" prot="public" static="no" strong="no">
        <type></type>
        <name>aiTextureOp</name>
        <enumvalue id="material_8h_1afcd3096d69affba13114cedfc6f9ee6ba4b4cf98920571bc5b5cdf333d1642759" prot="public">
          <name>aiTextureOp_Multiply</name>
          <initializer>= 0x0</initializer>
          <briefdescription>
<para>T = T1 * T2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1afcd3096d69affba13114cedfc6f9ee6ba38c643dc19bdb5dad544c54829129d14" prot="public">
          <name>aiTextureOp_Add</name>
          <initializer>= 0x1</initializer>
          <briefdescription>
<para>T = T1 + T2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1afcd3096d69affba13114cedfc6f9ee6bac20a0da785e4670500e7338bc59a0793" prot="public">
          <name>aiTextureOp_Subtract</name>
          <initializer>= 0x2</initializer>
          <briefdescription>
<para>T = T1 - T2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1afcd3096d69affba13114cedfc6f9ee6bac15b6232b50780f509edf0a6b39af72c" prot="public">
          <name>aiTextureOp_Divide</name>
          <initializer>= 0x3</initializer>
          <briefdescription>
<para>T = T1 / T2. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1afcd3096d69affba13114cedfc6f9ee6ba174eaa1b84bdcc131febea53da22aa4a" prot="public">
          <name>aiTextureOp_SmoothAdd</name>
          <initializer>= 0x4</initializer>
          <briefdescription>
<para>T = (T1 + T2) - (T1 * T2) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1afcd3096d69affba13114cedfc6f9ee6babe30ac3d3c7bff0fe1d69c70fbd646ff" prot="public">
          <name>aiTextureOp_SignedAdd</name>
          <initializer>= 0x5</initializer>
          <briefdescription>
<para>T = T1 + (T2-0.5) </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1afcd3096d69affba13114cedfc6f9ee6bafa05ee61b2b3dc74d2f042d9443a57c4" prot="public">
          <name>_aiTextureOp_Force32Bit</name>
          <initializer>= INT_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines how the Nth texture of a specific type is combined with the result of all previous layers. </para>
        </briefdescription>
        <detaileddescription>
<para>Example (left: key, right: value): <linebreak/>
 <programlisting><codeline><highlight class="normal">DiffColor0<sp/><sp/><sp/><sp/><sp/>-<sp/>gray</highlight></codeline>
<codeline><highlight class="normal">DiffTextureOp0<sp/>-<sp/>aiTextureOpMultiply</highlight></codeline>
<codeline><highlight class="normal">DiffTexture0<sp/><sp/><sp/>-<sp/>tex1.png</highlight></codeline>
<codeline><highlight class="normal">DiffTextureOp0<sp/>-<sp/>aiTextureOpAdd</highlight></codeline>
<codeline><highlight class="normal">DiffTexture1<sp/><sp/><sp/>-<sp/>tex2.png</highlight></codeline>
</programlisting> Written as equation, the final diffuse term for a specific pixel would be: <programlisting><codeline><highlight class="normal">diffFinal<sp/>=<sp/>DiffColor0<sp/>*<sp/>sampleTex(DiffTexture0,UV0)<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>sampleTex(DiffTexture1,UV0)<sp/>*<sp/>diffContrib;</highlight></codeline>
</programlisting> where &apos;diffContrib&apos; is the intensity of the incoming light for that pixel. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="81" column="1" bodyfile="include/assimp/material.h" bodystart="81" bodyend="103"/>
      </memberdef>
      <memberdef kind="enum" id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" prot="public" static="no" strong="no">
        <type></type>
        <name>aiTextureType</name>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a29933480f8f018b381ae8be57435a435" prot="public">
          <name>aiTextureType_NONE</name>
          <initializer>= 0</initializer>
          <briefdescription>
<para>Dummy value. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>No texture, but the value to be used as &apos;texture semantic&apos;
(#aiMaterialProperty::mSemantic) for all material properties
*not* related to textures.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a3027af56603d5babd7e2efcf5ed1debd" prot="public">
          <name>aiTextureType_DIFFUSE</name>
          <initializer>= 1</initializer>
          <briefdescription>
<para>LEGACY API MATERIALS Legacy refers to materials which Were originally implemented in the specifications around 2000. </para>
          </briefdescription>
          <detaileddescription>
<para>These must never be removed, as most engines support them. The texture is combined with the result of the diffuse lighting equation. OR PBR Specular/Glossiness </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a0fdc17eca73119fe7c4e7d17043aba6b" prot="public">
          <name>aiTextureType_SPECULAR</name>
          <initializer>= 2</initializer>
          <briefdescription>
<para>The texture is combined with the result of the specular lighting equation. </para>
          </briefdescription>
          <detaileddescription>
<para>OR PBR Specular/Glossiness </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a88d7fc7cc800d2641fd481067eca0dc4" prot="public">
          <name>aiTextureType_AMBIENT</name>
          <initializer>= 3</initializer>
          <briefdescription>
<para>The texture is combined with the result of the ambient lighting equation. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a9a8cd97191328740f68e0e77e83ac485" prot="public">
          <name>aiTextureType_EMISSIVE</name>
          <initializer>= 4</initializer>
          <briefdescription>
<para>The texture is added to the result of the lighting calculation. </para>
          </briefdescription>
          <detaileddescription>
<para>It isn&apos;t influenced by incoming light. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5cff2209ef767617b00c2875afe7d5a7" prot="public">
          <name>aiTextureType_HEIGHT</name>
          <initializer>= 5</initializer>
          <briefdescription>
<para>The texture is a height map. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>By convention, higher gray-scale values stand for
higher elevations from the base height.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0aaf9089ae800fe4b3d97bc88d7686bab0" prot="public">
          <name>aiTextureType_NORMALS</name>
          <initializer>= 6</initializer>
          <briefdescription>
<para>The texture is a (tangent space) normal-map. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Again, there are several conventions for tangent-space
normal maps. Assimp does (intentionally) not
distinguish here.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a8675306af91180469f7e98a438125b89" prot="public">
          <name>aiTextureType_SHININESS</name>
          <initializer>= 7</initializer>
          <briefdescription>
<para>The texture defines the glossiness of the material. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>The glossiness is in fact the exponent of the specular
(phong) lighting equation. Usually there is a conversion
function defined to map the linear color values in the
texture to a suitable exponent. Have fun.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a68e7f8f7485bb00142a25df18e1ff148" prot="public">
          <name>aiTextureType_OPACITY</name>
          <initializer>= 8</initializer>
          <briefdescription>
<para>The texture defines per-pixel opacity. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Usually &apos;white&apos; means opaque and &apos;black&apos; means
&apos;transparency&apos;. Or quite the opposite. Have fun.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a929ae2ac33faa1ffe15978933c29337e" prot="public">
          <name>aiTextureType_DISPLACEMENT</name>
          <initializer>= 9</initializer>
          <briefdescription>
<para>Displacement texture. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>The exact purpose and format is application-dependent.
Higher color values stand for higher vertex displacements.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a86e356815b137cd584336cab11e72820" prot="public">
          <name>aiTextureType_LIGHTMAP</name>
          <initializer>= 10</initializer>
          <briefdescription>
<para>Lightmap texture (aka Ambient Occlusion) </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>Both &apos;Lightmaps&apos; and dedicated &apos;ambient occlusion maps&apos; are
covered by this material property. The texture contains a
scaling value for the final color value of a pixel. Its
intensity is not affected by incoming light.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0aa675f72b81148c5c260d408e122de7f8" prot="public">
          <name>aiTextureType_REFLECTION</name>
          <initializer>= 11</initializer>
          <briefdescription>
<para>Reflection texture. </para>
          </briefdescription>
          <detaileddescription>
<para>Contains the color of a perfect mirror reflection. Rarely used, almost never for real-time applications. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5d752b64d94439eadbb815e8a35d4fc0" prot="public">
          <name>aiTextureType_BASE_COLOR</name>
          <initializer>= 12</initializer>
          <briefdescription>
<para>PBR Materials PBR definitions from maya and other modelling packages now use this standard. </para>
          </briefdescription>
          <detaileddescription>
<para>This was originally introduced around 2012. Support for this is in game engines like Godot, Unreal or Unity3D. Modelling packages which use this are very common now. </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0aa8526cb493ab84b04a758a82cb858978" prot="public">
          <name>aiTextureType_NORMAL_CAMERA</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a47ba4de160b7ffc0c05a872563c4bec7" prot="public">
          <name>aiTextureType_EMISSION_COLOR</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a102addc15801212fb74d821cf6556bcd" prot="public">
          <name>aiTextureType_METALNESS</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a3be75e9bfee00f0df2a715ca27fcebc6" prot="public">
          <name>aiTextureType_DIFFUSE_ROUGHNESS</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0ae35c89a0f567067aa7985b6d0ba1ac0d" prot="public">
          <name>aiTextureType_AMBIENT_OCCLUSION</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a2534326d369dc2b340ac0c23a9405c0a" prot="public">
          <name>aiTextureType_SHEEN</name>
          <initializer>= 19</initializer>
          <briefdescription>
<para>PBR Material Modifiers Some modern renderers have further PBR modifiers that may be overlaid on top of the &apos;base&apos; PBR materials for additional realism. </para>
          </briefdescription>
          <detaileddescription>
<para>These use multiple texture maps, so only the base type is directly defined Sheen Generally used to simulate textiles that are covered in a layer of microfibers eg velvet <ulink url="https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_sheen">https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_sheen</ulink> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a4c8443070acff2892a377aeb022e273f" prot="public">
          <name>aiTextureType_CLEARCOAT</name>
          <initializer>= 20</initializer>
          <briefdescription>
<para>Clearcoat Simulates a layer of &apos;polish&apos; or &apos;laquer&apos; layered on top of a PBR substrate <ulink url="https://autodesk.github.io/standard-surface/#closures/coating">https://autodesk.github.io/standard-surface/#closures/coating</ulink> <ulink url="https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat">https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_clearcoat</ulink>. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5012d291ed3b5fc6f4ebba375b5fa74a" prot="public">
          <name>aiTextureType_TRANSMISSION</name>
          <initializer>= 21</initializer>
          <briefdescription>
<para>Transmission Simulates transmission through the surface May include further information such as wall thickness. </para>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a435cc5adea69c96c0c3205a2bde21cce" prot="public">
          <name>aiTextureType_UNKNOWN</name>
          <initializer>= 18</initializer>
          <briefdescription>
<para>Unknown texture. </para>
          </briefdescription>
          <detaileddescription>
<para><verbatim>A texture reference that does not match any of the definitions
above is considered to be &apos;unknown&apos;. It is still imported,
but is excluded from any further post-processing.
</verbatim> </para>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a78e1009477fa87111ae38c7ef2bdb154" prot="public">
          <name>_aiTextureType_Force32Bit</name>
          <initializer>= INT_MAX</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Defines the purpose of a texture. </para>
        </briefdescription>
        <detaileddescription>
<para>This is a very difficult topic. Different 3D packages support different kinds of textures. For very common texture types, such as bumpmaps, the rendering results depend on implementation details in the rendering pipelines of these applications. <ref refid="namespace_assimp" kindref="compound">Assimp</ref> loads all texture references from the model file and tries to determine which of the predefined texture types below is the best choice to match the original use of the texture as closely as possible.<linebreak/>
</para>
<para>In content pipelines you&apos;ll usually define how textures have to be handled, and the artists working on models have to conform to this specification, regardless which 3D tool they&apos;re using. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="188" column="1" bodyfile="include/assimp/material.h" bodystart="188" bodyend="332"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="material_8h_1ac4a6fbb0c08ddd1372ae187bf108d7e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> <ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref> <ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>ASSIMP_API C_ENUM aiReturn aiGetMaterialColor</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, C_STRUCT aiColor4D *pOut)</argsstring>
        <name>aiGetMaterialColor</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="color4_8h_1a4badb8c19633de8f741ba2089ab79189" kindref="member">aiColor4D</ref> *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Retrieve a color value from the material property table. </para>
        </briefdescription>
        <detaileddescription>
<para>See the sample for aiGetMaterialFloat for more information </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1559" column="28" declfile="include/assimp/material.h" declline="1559" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1af3a0c289a0ec5d5b01bdfced0605bb11" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>aiReturn aiGetMaterialFloat</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, ai_real *pOut)</argsstring>
        <name>aiGetMaterialFloat</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref> *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Retrieve a single float property with a specific key from the material. </para>
        </briefdescription>
        <detaileddescription>
<para>Pass one of the AI_MATKEY_XXX constants for the last three parameters (the example reads the <ref refid="material_8h_1a8cbc5193d8836369d9bf9907628d4f4d" kindref="member">AI_MATKEY_SHININESS_STRENGTH</ref> property of the first diffuse texture) <programlisting><codeline><highlight class="normal">float<sp/>specStrength<sp/>=<sp/>1.f;<sp/>//<sp/>default<sp/>value,<sp/>remains<sp/>unmodified<sp/>if<sp/>we<sp/>fail.</highlight></codeline>
<codeline><highlight class="normal">aiGetMaterialFloat(mat,<sp/>AI_MATKEY_SHININESS_STRENGTH,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>(float*)&amp;specStrength);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pMat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input material. May not be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pKey</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to search for. One of the AI_MATKEY_XXX constants. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the output float. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>(see the code sample above) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>(see the code sample above) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Specifies whether the key has been found. If not, the output float remains unmodified. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1521" column="17" bodyfile="include/assimp/material.h" bodystart="1521" bodyend="1527"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a914b58254f33c1574ec872a7f8c78805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> <ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref> <ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>ASSIMP_API C_ENUM aiReturn aiGetMaterialFloatArray</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, ai_real *pOut, unsigned int *pMax)</argsstring>
        <name>aiGetMaterialFloatArray</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref> *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>pMax</declname>
        </param>
        <briefdescription>
<para>Retrieve an array of float values with a specific key from the material. </para>
        </briefdescription>
        <detaileddescription>
<para>Pass one of the AI_MATKEY_XXX constants for the last three parameters (the example reads the <ref refid="material_8h_1ab24f58c983cf26acc9389ed2530316a9" kindref="member">AI_MATKEY_UVTRANSFORM</ref> property of the first diffuse texture) <programlisting><codeline><highlight class="normal">aiUVTransform<sp/>trafo;</highlight></codeline>
<codeline><highlight class="normal">unsigned<sp/>int<sp/>max<sp/>=<sp/>sizeof(aiUVTransform);</highlight></codeline>
<codeline><highlight class="normal">if<sp/>(AI_SUCCESS<sp/>!=<sp/>aiGetMaterialFloatArray(mat,<sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_DIFFUSE,0),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/>(float*)&amp;trafo,<sp/>&amp;max)<sp/>||<sp/>sizeof(aiUVTransform)<sp/>!=<sp/>max)</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/>//<sp/>error<sp/>handling</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pMat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input material. May not be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pKey</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to search for. One of the AI_MATKEY_XXX constants. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pOut</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to receive the result. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pMax</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the size of the given buffer, in float&apos;s. Receives the number of values (not bytes!) read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>(see the code sample above) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>(see the code sample above) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Specifies whether the key has been found. If not, the output arrays remains unmodified and pMax is set to 0. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1494" column="28" declfile="include/assimp/material.h" declline="1494" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a0c3edecf5eade8c3c0578de7eab6d6dc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>aiReturn aiGetMaterialInteger</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, int *pOut)</argsstring>
        <name>aiGetMaterialInteger</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Retrieve an integer property with a specific key from a material. </para>
        </briefdescription>
        <detaileddescription>
<para>See the sample for aiGetMaterialFloat for more information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1546" column="17" bodyfile="include/assimp/material.h" bodystart="1546" bodyend="1552"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a8ed2b99a9861d257b77231b4ed70f69d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> <ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref> <ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>ASSIMP_API C_ENUM aiReturn aiGetMaterialIntegerArray</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, int *pOut, unsigned int *pMax)</argsstring>
        <name>aiGetMaterialIntegerArray</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>pOut</declname>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>pMax</declname>
        </param>
        <briefdescription>
<para>Retrieve an array of integer values with a specific key from a material. </para>
        </briefdescription>
        <detaileddescription>
<para>See the sample for aiGetMaterialFloatArray for more information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1534" column="28" declfile="include/assimp/material.h" declline="1534" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a3052135188f8fc7987d2f98fa17615e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> <ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref> <ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>ASSIMP_API C_ENUM aiReturn aiGetMaterialProperty</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, const C_STRUCT aiMaterialProperty **pPropOut)</argsstring>
        <name>aiGetMaterialProperty</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> aiMaterialProperty **</type>
          <declname>pPropOut</declname>
        </param>
        <briefdescription>
<para>Retrieve a material property with a specific key from the material. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pMat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input material. May not be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pKey</parametername>
</parameternamelist>
<parameterdescription>
<para>Key to search for. One of the AI_MATKEY_XXX constants. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the type of the texture to be retrieved ( e.g. diffuse, specular, height map ...) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the texture to be retrieved. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pPropOut</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to receive a pointer to a valid aiMaterialProperty structure or NULL if the key has not been found. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1461" column="28" declfile="include/assimp/material.h" declline="1461" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a20e2873fb56982ea3a5dcd6a343b7070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> <ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref> <ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>ASSIMP_API C_ENUM aiReturn aiGetMaterialString</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, C_STRUCT aiString *pOut)</argsstring>
        <name>aiGetMaterialString</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_string" kindref="compound">aiString</ref> *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Retrieve a string from the material property table. </para>
        </briefdescription>
        <detaileddescription>
<para>See the sample for aiGetMaterialFloat for more information. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1581" column="28" declfile="include/assimp/material.h" declline="1581" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a5818ea7edc3fbfd0007ccba85bc1e4d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> <ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>ASSIMP_API aiReturn aiGetMaterialTexture</definition>
        <argsstring>(const C_STRUCT aiMaterial *mat, aiTextureType type, unsigned int index, aiString *path, aiTextureMapping *mapping=NULL, unsigned int *uvindex=NULL, ai_real *blend=NULL, aiTextureOp *op=NULL, aiTextureMapMode *mapmode=NULL, unsigned int *flags=NULL)</argsstring>
        <name>aiGetMaterialTexture</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>mat</declname>
        </param>
        <param>
          <type><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="structai_string" kindref="compound">aiString</ref> *</type>
          <declname>path</declname>
        </param>
        <param>
          <type><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9" kindref="member">aiTextureMapping</ref> *</type>
          <declname>mapping</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>uvindex</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref> *</type>
          <declname>blend</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6b" kindref="member">aiTextureOp</ref> *</type>
          <declname>op</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0" kindref="member">aiTextureMapMode</ref> *</type>
          <declname>mapmode</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>flags</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Helper function to get all values pertaining to a particular texture slot from a material structure. </para>
        </briefdescription>
        <detaileddescription>
<para>This function is provided just for convenience. You could also read the texture by parsing all of its properties manually. This function bundles all of them in a huge function monster.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">mat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input material. May not be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">type</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the texture stack to read from (e.g. diffuse, specular, height map ...). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the texture. The function fails if the requested index is not available for this texture type. <ref refid="material_8h_1a8d331464c4f86b44cb6c6d64e39398ed" kindref="member">aiGetMaterialTextureCount()</ref> can be used to determine the number of textures in a particular texture stack. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">path</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the output path If the texture is embedded, receives a &apos;*&apos; followed by the id of the texture (for the textures stored in the corresponding scene) which can be converted to an int using a function like atoi. This parameter must be non-null. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mapping</parametername>
</parameternamelist>
<parameterdescription>
<para>The texture mapping mode to be used. Pass NULL if you&apos;re not interested in this information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">uvindex</parametername>
</parameternamelist>
<parameterdescription>
<para>For UV-mapped textures: receives the index of the UV source channel. Unmodified otherwise. Pass NULL if you&apos;re not interested in this information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">blend</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the blend factor for the texture Pass NULL if you&apos;re not interested in this information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">op</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the texture blend operation to be perform between this texture and the previous texture. Pass NULL if you&apos;re not interested in this information. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">mapmode</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the mapping modes to be used for the texture. Pass NULL if you&apos;re not interested in this information. Otherwise, pass a pointer to an array of two aiTextureMapMode&apos;s (one for each axis, UV order). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Receives the the texture flags. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>AI_SUCCESS on success, otherwise something else. Have fun. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1635" column="21" declfile="include/assimp/material.h" declline="1635" declcolumn="21"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a8d331464c4f86b44cb6c6d64e39398ed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> unsigned int</type>
        <definition>ASSIMP_API unsigned int aiGetMaterialTextureCount</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, C_ENUM aiTextureType type)</argsstring>
        <name>aiGetMaterialTextureCount</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref> <ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Get the number of textures for a particular texture type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">pMat</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the input material. May not be NULL </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Texture type to check for </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of textures for this type. </para>
</simplesect>
<simplesect kind="note"><para>A texture can be easily queried using <ref refid="material_8h_1a5818ea7edc3fbfd0007ccba85bc1e4d2" kindref="member">aiGetMaterialTexture()</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1594" column="25" declfile="include/assimp/material.h" declline="1594" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a47b7e8aecc784edcb894600af33fd592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> <ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref> <ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>ASSIMP_API C_ENUM aiReturn aiGetMaterialUVTransform</definition>
        <argsstring>(const C_STRUCT aiMaterial *pMat, const char *pKey, unsigned int type, unsigned int index, C_STRUCT aiUVTransform *pOut)</argsstring>
        <name>aiGetMaterialUVTransform</name>
        <param>
          <type>const <ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_material" kindref="compound">aiMaterial</ref> *</type>
          <declname>pMat</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>pKey</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>index</declname>
        </param>
        <param>
          <type><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref> <ref refid="structai_u_v_transform" kindref="compound">aiUVTransform</ref> *</type>
          <declname>pOut</declname>
        </param>
        <briefdescription>
<para>Retrieve a <ref refid="structai_u_v_transform" kindref="compound">aiUVTransform</ref> value from the material property table. </para>
        </briefdescription>
        <detaileddescription>
<para>See the sample for aiGetMaterialFloat for more information </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="1570" column="28" declfile="include/assimp/material.h" declline="1570" declcolumn="28"/>
      </memberdef>
      <memberdef kind="function" id="material_8h_1a4c912e742ae3d0ae2724eb1e3ec26c6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref> const char *</type>
        <definition>ASSIMP_API const char* TextureTypeToString</definition>
        <argsstring>(enum aiTextureType in)</argsstring>
        <name>TextureTypeToString</name>
        <param>
          <type>enum <ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref></type>
          <declname>in</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/material.h" line="338" column="23" declfile="include/assimp/material.h" declline="338" declcolumn="23"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines the material system of the library. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="3"><highlight class="comment">Open<sp/>Asset<sp/>Import<sp/>Library<sp/>(assimp)</highlight></codeline>
<codeline lineno="4"><highlight class="comment">---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Copyright<sp/>(c)<sp/>2006-2021,<sp/>assimp<sp/>team</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">Redistribution<sp/>and<sp/>use<sp/>of<sp/>this<sp/>software<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,</highlight></codeline>
<codeline lineno="11"><highlight class="comment">with<sp/>or<sp/>without<sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following</highlight></codeline>
<codeline lineno="12"><highlight class="comment">conditions<sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="13"><highlight class="comment"></highlight></codeline>
<codeline lineno="14"><highlight class="comment">*<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">*<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/><sp/>copyright<sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/><sp/>following<sp/>disclaimer<sp/>in<sp/>the<sp/>documentation<sp/>and/or<sp/>other</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/><sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"></highlight></codeline>
<codeline lineno="23"><highlight class="comment">*<sp/>Neither<sp/>the<sp/>name<sp/>of<sp/>the<sp/>assimp<sp/>team,<sp/>nor<sp/>the<sp/>names<sp/>of<sp/>its</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/><sp/>contributors<sp/>may<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/><sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/><sp/>written<sp/>permission<sp/>of<sp/>the<sp/>assimp<sp/>team.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight></codeline>
<codeline lineno="28"><highlight class="comment">THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>COPYRIGHT<sp/>HOLDERS<sp/>AND<sp/>CONTRIBUTORS</highlight></codeline>
<codeline lineno="29"><highlight class="comment">&quot;AS<sp/>IS&quot;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR<sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="30"><highlight class="comment">LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR</highlight></codeline>
<codeline lineno="31"><highlight class="comment">A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>COPYRIGHT</highlight></codeline>
<codeline lineno="32"><highlight class="comment">OWNER<sp/>OR<sp/>CONTRIBUTORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,<sp/>INCIDENTAL,</highlight></codeline>
<codeline lineno="33"><highlight class="comment">SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT<sp/>NOT</highlight></codeline>
<codeline lineno="34"><highlight class="comment">LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="35"><highlight class="comment">DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="36"><highlight class="comment">THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="37"><highlight class="comment">(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE</highlight></codeline>
<codeline lineno="38"><highlight class="comment">OF<sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="39"><highlight class="comment">---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="40"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>AI_MATERIAL_H_INC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATERIAL_H_INC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__GNUC__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>system_header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;<ref refid="types_8h" kindref="compound">assimp/types.h</ref>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Name<sp/>for<sp/>default<sp/>materials<sp/>(2nd<sp/>is<sp/>used<sp/>if<sp/>meshes<sp/>have<sp/>UV<sp/>coords)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_DEFAULT_MATERIAL_NAME<sp/>&quot;DefaultMaterial&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="81"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6b" kindref="member">aiTextureOp</ref><sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6ba4b4cf98920571bc5b5cdf333d1642759" kindref="member">aiTextureOp_Multiply</ref><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6ba38c643dc19bdb5dad544c54829129d14" kindref="member">aiTextureOp_Add</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6bac20a0da785e4670500e7338bc59a0793" kindref="member">aiTextureOp_Subtract</ref><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6bac15b6232b50780f509edf0a6b39af72c" kindref="member">aiTextureOp_Divide</ref><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6ba174eaa1b84bdcc131febea53da22aa4a" kindref="member">aiTextureOp_SmoothAdd</ref><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6babe30ac3d3c7bff0fe1d69c70fbd646ff" kindref="member">aiTextureOp_SignedAdd</ref><sp/>=<sp/>0x5,</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6bafa05ee61b2b3dc74d2f042d9443a57c4" kindref="member">_aiTextureOp_Force32Bit</ref><sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">};</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="110"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0" kindref="member">aiTextureMapMode</ref><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0a39bee4a4d7222d7f21fc093cacac2bcf" kindref="member">aiTextureMapMode_Wrap</ref><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0a809e31ce25b28e9fb7dba0a362293ace" kindref="member">aiTextureMapMode_Clamp</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0a36bdbb449ea382cf7d3ecd7ccbd9c3e8" kindref="member">aiTextureMapMode_Decal</ref><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0ae0105c73fb2e7e6d10e80395b6995337" kindref="member">aiTextureMapMode_Mirror</ref><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0afcec988b7883a042f9ff9f80823da2c0" kindref="member">_aiTextureMapMode_Force32Bit</ref><sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="144"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9" kindref="member">aiTextureMapping</ref><sp/>{</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9afe4af8e2f0303198ff2c51edf3039277" kindref="member">aiTextureMapping_UV</ref><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9ada83cfca5e55fc99dc89e0e94c91cdb5" kindref="member">aiTextureMapping_SPHERE</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9a1f3e2bcbdb450f19666b9b0730bad9ae" kindref="member">aiTextureMapping_CYLINDER</ref><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9ac680b16f3be94f101132982afd003fee" kindref="member">aiTextureMapping_BOX</ref><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9acbb0fa22c77e4c8936c1071fcacd1a64" kindref="member">aiTextureMapping_PLANE</ref><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9a585fb9423e1e77a52c9096fc0b907881" kindref="member">aiTextureMapping_OTHER</ref><sp/>=<sp/>0x5,</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9a26d999203feb901a0b17e4babe9b9791" kindref="member">_aiTextureMapping_Force32Bit</ref><sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal">};</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="188"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref><sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a29933480f8f018b381ae8be57435a435" kindref="member">aiTextureType_NONE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a3027af56603d5babd7e2efcf5ed1debd" kindref="member">aiTextureType_DIFFUSE</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a0fdc17eca73119fe7c4e7d17043aba6b" kindref="member">aiTextureType_SPECULAR</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a88d7fc7cc800d2641fd481067eca0dc4" kindref="member">aiTextureType_AMBIENT</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a9a8cd97191328740f68e0e77e83ac485" kindref="member">aiTextureType_EMISSIVE</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5cff2209ef767617b00c2875afe7d5a7" kindref="member">aiTextureType_HEIGHT</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0aaf9089ae800fe4b3d97bc88d7686bab0" kindref="member">aiTextureType_NORMALS</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a8675306af91180469f7e98a438125b89" kindref="member">aiTextureType_SHININESS</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a68e7f8f7485bb00142a25df18e1ff148" kindref="member">aiTextureType_OPACITY</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a929ae2ac33faa1ffe15978933c29337e" kindref="member">aiTextureType_DISPLACEMENT</ref><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a86e356815b137cd584336cab11e72820" kindref="member">aiTextureType_LIGHTMAP</ref><sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0aa675f72b81148c5c260d408e122de7f8" kindref="member">aiTextureType_REFLECTION</ref><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5d752b64d94439eadbb815e8a35d4fc0" kindref="member">aiTextureType_BASE_COLOR</ref><sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0aa8526cb493ab84b04a758a82cb858978" kindref="member">aiTextureType_NORMAL_CAMERA</ref><sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a47ba4de160b7ffc0c05a872563c4bec7" kindref="member">aiTextureType_EMISSION_COLOR</ref><sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a102addc15801212fb74d821cf6556bcd" kindref="member">aiTextureType_METALNESS</ref><sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a3be75e9bfee00f0df2a715ca27fcebc6" kindref="member">aiTextureType_DIFFUSE_ROUGHNESS</ref><sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0ae35c89a0f567067aa7985b6d0ba1ac0d" kindref="member">aiTextureType_AMBIENT_OCCLUSION</ref><sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a2534326d369dc2b340ac0c23a9405c0a" kindref="member">aiTextureType_SHEEN</ref><sp/>=<sp/>19,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a4c8443070acff2892a377aeb022e273f" kindref="member">aiTextureType_CLEARCOAT</ref><sp/>=<sp/>20,</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a5012d291ed3b5fc6f4ebba375b5fa74a" kindref="member">aiTextureType_TRANSMISSION</ref><sp/>=<sp/>21,</highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a435cc5adea69c96c0c3205a2bde21cce" kindref="member">aiTextureType_UNKNOWN</ref><sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0a78e1009477fa87111ae38c7ef2bdb154" kindref="member">_aiTextureType_Force32Bit</ref><sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">};</highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_TEXTURE_TYPE_MAX<sp/>aiTextureType_UNKNOWN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>string<sp/>for<sp/>a<sp/>given<sp/>aiTextureType</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="material_8h_1a4c912e742ae3d0ae2724eb1e3ec26c6c" kindref="member">TextureTypeToString</ref>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref><sp/>in);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="355"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cf" kindref="member">aiShadingMode</ref><sp/>{</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa59fa2c27721e28dadd58cbd39cd46782" kindref="member">aiShadingMode_Flat</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa8a20ae47f38c01554ef467c324c27431" kindref="member">aiShadingMode_Gouraud</ref><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfafe5e89f846a9657232077c224fd1a914" kindref="member">aiShadingMode_Phong</ref><sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfaccd4aca098e73986e50c7566efd6ca1f" kindref="member">aiShadingMode_Blinn</ref><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa85c7b6a3c243a1991f4b17125a28a54c" kindref="member">aiShadingMode_Toon</ref><sp/>=<sp/>0x5,</highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfab2243130ec0bdb25a26ce829d486e55a" kindref="member">aiShadingMode_OrenNayar</ref><sp/>=<sp/>0x6,</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa0947dbe335c16766da43fe1b992af4fb" kindref="member">aiShadingMode_Minnaert</ref><sp/>=<sp/>0x7,</highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa36519b85cbfbba437bfe1c504d3dbd6d" kindref="member">aiShadingMode_CookTorrance</ref><sp/>=<sp/>0x8,</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa625d6dc1a678985000a1e3a9c7da1e3f" kindref="member">aiShadingMode_NoShading</ref><sp/>=<sp/>0x9,</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa24be16c9bd26f4f3d5d493881dcc1ec1" kindref="member">aiShadingMode_Unlit</ref><sp/>=<sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa625d6dc1a678985000a1e3a9c7da1e3f" kindref="member">aiShadingMode_NoShading</ref>,<sp/></highlight><highlight class="comment">//<sp/>Alias</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfab2f24381f6f4f21cee9cef32c1fd4d5f" kindref="member">aiShadingMode_Fresnel</ref><sp/>=<sp/>0xa,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfa0b3fe30914cb8961c68b0faa888a8be1" kindref="member">aiShadingMode_PBR_BRDF</ref><sp/>=<sp/>0xb,</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a93e23e0201d6ed86fb4287e15218e4cfaa33165721a2d89fde364b76fe2da3d00" kindref="member">_aiShadingMode_Force32Bit</ref><sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal">};</highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="438"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a6d003e078617e4e80d1313a6250b2dfd" kindref="member">aiTextureFlags</ref><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6d003e078617e4e80d1313a6250b2dfda2d22809697f40ef1969a491a8d3278ff" kindref="member">aiTextureFlags_Invert</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6d003e078617e4e80d1313a6250b2dfda5712da7264ec0c6e90b45580e5badbe0" kindref="member">aiTextureFlags_UseAlpha</ref><sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6d003e078617e4e80d1313a6250b2dfda78f2667e8304213210c2508b7af47499" kindref="member">aiTextureFlags_IgnoreAlpha</ref><sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6d003e078617e4e80d1313a6250b2dfdabdc67fee0727d08bd17135d58f67cdd6" kindref="member">_aiTextureFlags_Force32Bit</ref><sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal">};</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="482"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="material_8h_1ae1236da1ccfbf4f23bb490287a4d61ac" kindref="member">aiBlendMode</ref><sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1ae1236da1ccfbf4f23bb490287a4d61aca2df47d5d42d73938d3d273a75db671b0" kindref="member">aiBlendMode_Default</ref><sp/>=<sp/>0x0,</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1ae1236da1ccfbf4f23bb490287a4d61aca60eb5958c8fd4147bafd9098edf54e1e" kindref="member">aiBlendMode_Additive</ref><sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment">//<sp/>we<sp/>don&apos;t<sp/>need<sp/>more<sp/>for<sp/>the<sp/>moment,<sp/>but<sp/>we<sp/>might<sp/>need<sp/>them</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>future<sp/>versions<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="material_8h_1ae1236da1ccfbf4f23bb490287a4d61aca75430f7adb68b57be3892d40720f2982" kindref="member">_aiBlendMode_Force32Bit</ref><sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal">};</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pushpack1_8h" kindref="compound">./Compiler/pushpack1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="520" refid="structai_u_v_transform" refkind="compound"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structai_u_v_transform" kindref="compound">aiUVTransform</ref><sp/>{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="classai_vector2t" kindref="compound">aiVector2D</ref><sp/><ref refid="structai_u_v_transform_1a8c7f35959aa342bf0cef670246fbb813" kindref="member">mTranslation</ref>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="classai_vector2t" kindref="compound">aiVector2D</ref><sp/><ref refid="structai_u_v_transform_1a89429a027cbf914e7212e48149a957c8" kindref="member">mScaling</ref>;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/><ref refid="structai_u_v_transform_1a157005aadfdd145a56c7831c7b24f1ea" kindref="member">mRotation</ref>;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structai_u_v_transform_1a04ce4416ad2a09217b347c803e1bf94b" kindref="member">aiUVTransform</ref>()<sp/><ref refid="defs_8h_1ae032f18edd69bf6ba935ef9feb025a96" kindref="member">AI_NO_EXCEPT</ref></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structai_u_v_transform_1a8c7f35959aa342bf0cef670246fbb813" kindref="member">mTranslation</ref>(0.0,<sp/>0.0),</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structai_u_v_transform_1a89429a027cbf914e7212e48149a957c8" kindref="member">mScaling</ref>(1.0,<sp/>1.0),</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structai_u_v_transform_1a157005aadfdd145a56c7831c7b24f1ea" kindref="member">mRotation</ref>(0.0)<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>nothing<sp/>to<sp/>be<sp/>done<sp/>here<sp/>...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal">};</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="poppack1_8h" kindref="compound">./Compiler/poppack1.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="558"><highlight class="comment"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>aiPropertyTypeInfo<sp/>{</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/>aiPTI_Float<sp/>=<sp/>0x1,</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/>aiPTI_Double<sp/>=<sp/>0x2,</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>aiPTI_String<sp/>=<sp/>0x3,</highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/>aiPTI_Integer<sp/>=<sp/>0x4,</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/>aiPTI_Buffer<sp/>=<sp/>0x5,</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SWIG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/>_aiPTI_Force32Bit<sp/>=<sp/>INT_MAX</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal">};</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="622"><highlight class="comment"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">aiMaterialProperty<sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>mKey;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mSemantic;</highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mIndex;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mDataLength;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/>aiPropertyTypeInfo<sp/>mType;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*mData;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/>aiMaterialProperty()<sp/><ref refid="defs_8h_1ae032f18edd69bf6ba935ef9feb025a96" kindref="member">AI_NO_EXCEPT</ref></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mSemantic(0),</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mIndex(0),</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mDataLength(0),</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mType(aiPTI_Float),</highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mData(</highlight><highlight class="keywordtype">nullptr</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>empty</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/>~aiMaterialProperty()<sp/>{</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>mData;</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mData<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="674"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal">};</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>We<sp/>need<sp/>to<sp/>leave<sp/>the<sp/>&quot;C&quot;<sp/>block<sp/>here<sp/>to<sp/>allow<sp/>template<sp/>member<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="691"><highlight class="comment"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="structai_material" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref></highlight></codeline>
<codeline lineno="693"><highlight class="normal">#else</highlight></codeline>
<codeline lineno="694"><highlight class="normal">struct<sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref></highlight></codeline>
<codeline lineno="695"><highlight class="normal">#endif</highlight></codeline>
<codeline lineno="696"><highlight class="normal">{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref>();</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="structai_material" kindref="compound">aiMaterial</ref>();</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight></codeline>
<codeline lineno="709"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>GetName()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight></codeline>
<codeline lineno="724"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/>Type<sp/>*pOut,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pMax)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pOut,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pMax)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/>*pOut,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pMax)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight></codeline>
<codeline lineno="744"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Type&gt;</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/>Type<sp/>&amp;pOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;pOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/>&amp;pOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>&amp;pOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="structai_color3_d" kindref="compound">aiColor3D</ref><sp/>&amp;pOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="classai_color4t" kindref="compound">aiColor4D</ref><sp/>&amp;pOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>Get(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx,<sp/><ref refid="structai_u_v_transform" kindref="compound">aiUVTransform</ref><sp/>&amp;pOut)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight></codeline>
<codeline lineno="771"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>GetTextureCount(<ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref><sp/>type)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight></codeline>
<codeline lineno="803"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>-------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>GetTexture(<ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref><sp/>type,</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>*path,</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9" kindref="member">aiTextureMapping</ref><sp/>*mapping<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uvindex<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/>*blend<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6b" kindref="member">aiTextureOp</ref><sp/>*op<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0" kindref="member">aiTextureMapMode</ref><sp/>*mapmode<sp/>=<sp/>NULL)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setters</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="825"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddBinaryProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pSizeInBytes,</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>aiPropertyTypeInfo<sp/>pType);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="840"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>*pInput,</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="852"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>TYPE&gt;</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>TYPE<sp/>*pInput,</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classai_vector3t" kindref="compound">aiVector3D</ref><sp/>*pInput,</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structai_color3_d" kindref="compound">aiColor3D</ref><sp/>*pInput,</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classai_color4t" kindref="compound">aiColor4D</ref><sp/>*pInput,</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="882"><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*pInput,</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>AddProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structai_u_v_transform" kindref="compound">aiUVTransform</ref><sp/>*pInput,</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pNumValues,</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="908"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/>RemoveProperty(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="916"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Clear();</highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>------------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="923"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CopyPropertyList(<ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pcDest,</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pcSrc);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/>aiMaterialProperty<sp/>**mProperties;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNumProperties;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mNumAllocated;</highlight></codeline>
<codeline lineno="936"><highlight class="normal">};</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Go<sp/>back<sp/>to<sp/>extern<sp/>&quot;C&quot;<sp/>again</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_NAME<sp/>&quot;?mat.name&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TWOSIDED<sp/>&quot;$mat.twosided&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHADING_MODEL<sp/>&quot;$mat.shadingm&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_ENABLE_WIREFRAME<sp/>&quot;$mat.wireframe&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="948"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_BLEND_FUNC<sp/>&quot;$mat.blend&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_OPACITY<sp/>&quot;$mat.opacity&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="950"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TRANSPARENCYFACTOR<sp/>&quot;$mat.transparencyfactor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_BUMPSCALING<sp/>&quot;$mat.bumpscaling&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="952"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHININESS<sp/>&quot;$mat.shininess&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_REFLECTIVITY<sp/>&quot;$mat.reflectivity&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHININESS_STRENGTH<sp/>&quot;$mat.shinpercent&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_REFRACTI<sp/>&quot;$mat.refracti&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_COLOR_DIFFUSE<sp/>&quot;$clr.diffuse&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_COLOR_AMBIENT<sp/>&quot;$clr.ambient&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="958"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_COLOR_SPECULAR<sp/>&quot;$clr.specular&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_COLOR_EMISSIVE<sp/>&quot;$clr.emissive&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="960"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_COLOR_TRANSPARENT<sp/>&quot;$clr.transparent&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="961"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_COLOR_REFLECTIVE<sp/>&quot;$clr.reflective&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_GLOBAL_BACKGROUND_IMAGE<sp/>&quot;?bg.global&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_GLOBAL_SHADERLANG<sp/>&quot;?sh.lang&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHADER_VERTEX<sp/>&quot;?sh.vs&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHADER_FRAGMENT<sp/>&quot;?sh.fs&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHADER_GEO<sp/>&quot;?sh.gs&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="967"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHADER_TESSELATION<sp/>&quot;?sh.ts&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHADER_PRIMITIVE<sp/>&quot;?sh.ps&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHADER_COMPUTE<sp/>&quot;?sh.cs&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight><highlight class="comment">//<sp/>PBR<sp/>material<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Properties<sp/>defining<sp/>PBR<sp/>rendering<sp/>techniques</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_USE_COLOR_MAP<sp/>&quot;$mat.useColorMap&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Metallic/Roughness<sp/>Workflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="978"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>RGBA<sp/>color<sp/>factor.<sp/>Will<sp/>be<sp/>multiplied<sp/>by<sp/>final<sp/>base<sp/>color<sp/>texture<sp/>values<sp/>if<sp/>extant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>Importers<sp/>may<sp/>choose<sp/>to<sp/>copy<sp/>this<sp/>into<sp/>AI_MATKEY_COLOR_DIFFUSE<sp/>for<sp/>compatibility</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"></highlight><highlight class="comment">//<sp/>with<sp/>renderers<sp/>and<sp/>formats<sp/>that<sp/>do<sp/>not<sp/>support<sp/>Metallic/Roughness<sp/>PBR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_BASE_COLOR<sp/>&quot;$clr.base&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_BASE_COLOR_TEXTURE<sp/>aiTextureType_BASE_COLOR,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_USE_METALLIC_MAP<sp/>&quot;$mat.useMetallicMap&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Metallic<sp/>factor.<sp/>0.0<sp/>=<sp/>Full<sp/>Dielectric,<sp/>1.0<sp/>=<sp/>Full<sp/>Metal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_METALLIC_FACTOR<sp/>&quot;$mat.metallicFactor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_METALLIC_TEXTURE<sp/>aiTextureType_METALNESS,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_USE_ROUGHNESS_MAP<sp/>&quot;$mat.useRoughnessMap&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Roughness<sp/>factor.<sp/>0.0<sp/>=<sp/>Perfectly<sp/>Smooth,<sp/>1.0<sp/>=<sp/>Completely<sp/>Rough</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_ROUGHNESS_FACTOR<sp/>&quot;$mat.roughnessFactor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_ROUGHNESS_TEXTURE<sp/>aiTextureType_DIFFUSE_ROUGHNESS,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specular/Glossiness<sp/>Workflow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Diffuse/Albedo<sp/>Color.<sp/>Note:<sp/>Pure<sp/>Metals<sp/>have<sp/>a<sp/>diffuse<sp/>of<sp/>{0,0,0}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AI_MATKEY_COLOR_DIFFUSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specular<sp/>Color.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Note:<sp/>Metallic/Roughness<sp/>may<sp/>also<sp/>have<sp/>a<sp/>Specular<sp/>Color</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"></highlight><highlight class="comment">//<sp/>AI_MATKEY_COLOR_SPECULAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SPECULAR_FACTOR<sp/>&quot;$mat.specularFactor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Glossiness<sp/>factor.<sp/>0.0<sp/>=<sp/>Completely<sp/>Rough,<sp/>1.0<sp/>=<sp/>Perfectly<sp/>Smooth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_GLOSSINESS_FACTOR<sp/>&quot;$mat.glossinessFactor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sheen</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-----</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sheen<sp/>base<sp/>RGB<sp/>color.<sp/>Default<sp/>{0,0,0}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHEEN_COLOR_FACTOR<sp/>&quot;$clr.sheen.factor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sheen<sp/>Roughness<sp/>Factor.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHEEN_ROUGHNESS_FACTOR<sp/>&quot;$mat.sheen.roughnessFactor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHEEN_COLOR_TEXTURE<sp/>aiTextureType_SHEEN,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_SHEEN_ROUGHNESS_TEXTURE<sp/>aiTextureType_SHEEN,<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1013"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clearcoat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Clearcoat<sp/>layer<sp/>intensity.<sp/>0.0<sp/>=<sp/>none<sp/>(disabled)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_CLEARCOAT_FACTOR<sp/>&quot;$mat.clearcoat.factor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_CLEARCOAT_ROUGHNESS_FACTOR<sp/>&quot;$mat.clearcoat.roughnessFactor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_CLEARCOAT_TEXTURE<sp/>aiTextureType_CLEARCOAT,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_CLEARCOAT_ROUGHNESS_TEXTURE<sp/>aiTextureType_CLEARCOAT,<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_CLEARCOAT_NORMAL_TEXTURE<sp/>aiTextureType_CLEARCOAT,<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transmission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"></highlight><highlight class="comment">//<sp/>------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_transmission</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Base<sp/>percentage<sp/>of<sp/>light<sp/>transmitted<sp/>through<sp/>the<sp/>surface.<sp/>0.0<sp/>=<sp/>Opaque,<sp/>1.0<sp/>=<sp/>Fully<sp/>transparent</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TRANSMISSION_FACTOR<sp/>&quot;$mat.transmission.factor&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Texture<sp/>defining<sp/>percentage<sp/>of<sp/>light<sp/>transmitted<sp/>through<sp/>the<sp/>surface.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Multiplied<sp/>by<sp/>AI_MATKEY_TRANSMISSION_FACTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TRANSMISSION_TEXTURE<sp/>aiTextureType_TRANSMISSION,<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Emissive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="comment">//<sp/>--------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_USE_EMISSIVE_MAP<sp/>&quot;$mat.useEmissiveMap&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_EMISSIVE_INTENSITY<sp/>&quot;$mat.emissiveIntensity&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_USE_AO_MAP<sp/>&quot;$mat.useAOMap&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>0</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight></codeline>
<codeline lineno="1037"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pure<sp/>key<sp/>names<sp/>for<sp/>all<sp/>texture-related<sp/>properties</highlight></codeline>
<codeline lineno="1040"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_TEXTURE_BASE<sp/>&quot;$tex.file&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_UVWSRC_BASE<sp/>&quot;$tex.uvwsrc&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_TEXOP_BASE<sp/>&quot;$tex.op&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1043"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_MAPPING_BASE<sp/>&quot;$tex.mapping&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_TEXBLEND_BASE<sp/>&quot;$tex.blend&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_MAPPINGMODE_U_BASE<sp/>&quot;$tex.mapmodeu&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_MAPPINGMODE_V_BASE<sp/>&quot;$tex.mapmodev&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_TEXMAP_AXIS_BASE<sp/>&quot;$tex.mapaxis&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_UVTRANSFORM_BASE<sp/>&quot;$tex.uvtrafo&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_AI_MATKEY_TEXFLAGS_BASE<sp/>&quot;$tex.flags&quot;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight></codeline>
<codeline lineno="1052"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE(type,<sp/>N)<sp/>_AI_MATKEY_TEXTURE_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1058"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1061"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1064"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1067"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1070"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1073"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1076"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1079"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1082"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1085"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXTURE_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1088"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXTURE(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC(type,<sp/>N)<sp/>_AI_MATKEY_UVWSRC_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1097"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1098"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1126"><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVWSRC_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVWSRC(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP(type,<sp/>N)<sp/>_AI_MATKEY_TEXOP_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1147"><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"></highlight></codeline>
<codeline lineno="1154"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight></codeline>
<codeline lineno="1157"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXOP_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXOP(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING(type,<sp/>N)<sp/>_AI_MATKEY_MAPPING_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1175"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1179"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1182"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1188"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1191"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1194"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1197"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1200"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1203"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPING_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1206"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPING(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND(type,<sp/>N)<sp/>_AI_MATKEY_TEXBLEND_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1211"><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1214"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1215"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1221"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1236"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1239"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1242"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXBLEND_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1245"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXBLEND(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight></codeline>
<codeline lineno="1248"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U(type,<sp/>N)<sp/>_AI_MATKEY_MAPPINGMODE_U_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1253"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1266"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1275"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1281"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_U_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_U(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V(type,<sp/>N)<sp/>_AI_MATKEY_MAPPINGMODE_V_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1292"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1299"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1308"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1314"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1320"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_MAPPINGMODE_V_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_MAPPINGMODE_V(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS(type,<sp/>N)<sp/>_AI_MATKEY_TEXMAP_AXIS_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1331"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1338"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1347"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1350"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1353"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1356"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1359"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXMAP_AXIS_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1362"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXMAP_AXIS(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM(type,<sp/>N)<sp/>_AI_MATKEY_UVTRANSFORM_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1370"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1371"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1374"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1377"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1380"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1383"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1386"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1389"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1392"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1395"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1398"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1401"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_UVTRANSFORM_UNKNOWN(N)<sp/>\</highlight></codeline>
<codeline lineno="1404"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_UVTRANSFORM(aiTextureType_UNKNOWN,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS(type,<sp/>N)<sp/>_AI_MATKEY_TEXFLAGS_BASE,<sp/>type,<sp/>N</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>backward<sp/>compatibility<sp/>and<sp/>simplicity</highlight></codeline>
<codeline lineno="1412"><highlight class="comment"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_DIFFUSE(N)<sp/>\</highlight></codeline>
<codeline lineno="1413"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_DIFFUSE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_SPECULAR(N)<sp/>\</highlight></codeline>
<codeline lineno="1416"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_SPECULAR,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_AMBIENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1419"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_AMBIENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_EMISSIVE(N)<sp/>\</highlight></codeline>
<codeline lineno="1422"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_EMISSIVE,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_NORMALS(N)<sp/>\</highlight></codeline>
<codeline lineno="1425"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_NORMALS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_HEIGHT(N)<sp/>\</highlight></codeline>
<codeline lineno="1428"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_HEIGHT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_SHININESS(N)<sp/>\</highlight></codeline>
<codeline lineno="1431"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_SHININESS,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_OPACITY(N)<sp/>\</highlight></codeline>
<codeline lineno="1434"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_OPACITY,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_DISPLACEMENT(N)<sp/>\</highlight></codeline>
<codeline lineno="1437"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_DISPLACEMENT,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_LIGHTMAP(N)<sp/>\</highlight></codeline>
<codeline lineno="1440"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_LIGHTMAP,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_REFLECTION(N)<sp/>\</highlight></codeline>
<codeline lineno="1443"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_REFLECTION,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>AI_MATKEY_TEXFLAGS_UNKNOWN(N)<sp/>\</highlight></codeline>
<codeline lineno="1446"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>AI_MATKEY_TEXFLAGS(aiTextureType_UNKNOWN,<sp/>N)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"></highlight></codeline>
<codeline lineno="1450"><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1460"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a3052135188f8fc7987d2f98fa17615e4" kindref="member">aiGetMaterialProperty</ref>(</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/>aiMaterialProperty<sp/>**pPropOut);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1493"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a914b58254f33c1574ec872a7f8c78805" kindref="member">aiGetMaterialFloatArray</ref>(</highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/>*pOut,</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pMax);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1520"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1af3a0c289a0ec5d5b01bdfced0605bb11" kindref="member">aiGetMaterialFloat</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/>*pOut)<sp/>{</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a914b58254f33c1574ec872a7f8c78805" kindref="member">aiGetMaterialFloatArray</ref>(pMat,<sp/>pKey,<sp/>type,<sp/>index,<sp/>pOut,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)0x0);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1534"><highlight class="comment"></highlight><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a8ed2b99a9861d257b77231b4ed70f69d" kindref="member">aiGetMaterialIntegerArray</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pOut,</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pMax);</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1545"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a0c3edecf5eade8c3c0578de7eab6d6dc" kindref="member">aiGetMaterialInteger</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*pOut)<sp/>{</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a8ed2b99a9861d257b77231b4ed70f69d" kindref="member">aiGetMaterialIntegerArray</ref>(pMat,<sp/>pKey,<sp/>type,<sp/>index,<sp/>pOut,<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*)0x0);</highlight></codeline>
<codeline lineno="1552"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1553"><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1558"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1ac4a6fbb0c08ddd1372ae187bf108d7e8" kindref="member">aiGetMaterialColor</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="classai_color4t" kindref="compound">aiColor4D</ref><sp/>*pOut);</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1569"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a47b7e8aecc784edcb894600af33fd592" kindref="member">aiGetMaterialUVTransform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_u_v_transform" kindref="compound">aiUVTransform</ref><sp/>*pOut);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1580"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a20e2873fb56982ea3a5dcd6a343b7070" kindref="member">aiGetMaterialString</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pKey,</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>*pOut);</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1593"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="material_8h_1a8d331464c4f86b44cb6c6d64e39398ed" kindref="member">aiGetMaterialTextureCount</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*pMat,</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref><sp/>type);</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight></codeline>
<codeline lineno="1633"><highlight class="comment"></highlight><highlight class="comment">//<sp/>---------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><ref refid="defs_8h_1a7d617d307e656cb6ff315ba71ff958d4" kindref="member">ASSIMP_API</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a5818ea7edc3fbfd0007ccba85bc1e4d2" kindref="member">aiGetMaterialTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*mat,</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref><sp/>type,</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>*path,</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9" kindref="member">aiTextureMapping</ref><sp/>*mapping<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uvindex<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/>*blend<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6b" kindref="member">aiTextureOp</ref><sp/>*op<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0" kindref="member">aiTextureMapMode</ref><sp/>*mapmode<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*flags<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref><sp/><ref refid="material_8h_1a5818ea7edc3fbfd0007ccba85bc1e4d2" kindref="member">aiGetMaterialTexture</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_material" kindref="compound">aiMaterial</ref><sp/>*mat,</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="material_8h_1a7dd415ff703a2cc53d1c22ddbbd7dde0" kindref="member">aiTextureType</ref><sp/>type,</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1ab51df4230ceb602bbc1bc109c432a6a0" kindref="member">C_STRUCT</ref><sp/><ref refid="structai_string" kindref="compound">aiString</ref><sp/>*path,</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="material_8h_1a6186e909f1ae28133ab10f1b4635b0f9" kindref="member">aiTextureMapping</ref><sp/>*mapping<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*uvindex<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1af221f9bbc3e0dc43a46efaaac6dab067" kindref="member">ai_real</ref><sp/>*blend<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="material_8h_1afcd3096d69affba13114cedfc6f9ee6b" kindref="member">aiTextureOp</ref><sp/>*op<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="defs_8h_1aa8c1788fd9d096036c9e3b6cfe4b1301" kindref="member">C_ENUM</ref><sp/><ref refid="material_8h_1a6cbe56056751aa80e8dd714632a49de0" kindref="member">aiTextureMapMode</ref><sp/>*mapmode<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*flags<sp/></highlight><highlight class="comment">/*=<sp/>NULL*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="material_8inl" kindref="compound">material.inl</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight></codeline>
    </programlisting>
    <location file="include/assimp/material.h"/>
  </compounddef>
</doxygen>
