<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="pstdint_8h" kind="file" language="C++">
    <compoundname>pstdint.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">signal.h</includes>
    <includedby refid="fast__atof_8h" local="no">fast_atof.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>pstdint.h</label>
        <link refid="pstdint_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="3">
        <label>limits.h</label>
      </node>
      <node id="4">
        <label>signal.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>pstdint.h</label>
        <link refid="pstdint_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>fast_atof.h</label>
        <link refid="fast__atof_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="pstdint_8h_1a91cbfa927fe8e3fc657296bfe67849a6" prot="public" static="no">
        <name>_PSTDINT_H_INCLUDED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="355" column="9" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="355" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ac58f2c111cc9989c86db2a7dc4fd84ca" prot="public" static="no">
        <name>INT16_MAX</name>
        <initializer>0x7fff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="416" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ad4e9955955b27624963643eac448118a" prot="public" static="no">
        <name>INT16_MIN</name>
        <initializer>INT16_C(0x8000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="419" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="419" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a181807730d4a375f848ba139813ce04f" prot="public" static="no">
        <name>INT32_MAX</name>
        <initializer>(0x7fffffffL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="467" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="467" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a688eb21a22db27c2b2bd5836943cdcbe" prot="public" static="no">
        <name>INT32_MIN</name>
        <initializer>INT32_C(0x80000000)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="470" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="470" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aaf7f29f45f1a513b4748a4e5014ddf6a" prot="public" static="no">
        <name>INT8_MAX</name>
        <initializer>0x7f</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="380" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aadcf2a81af243df333b31efa6461ab8e" prot="public" static="no">
        <name>INT8_MIN</name>
        <initializer>INT8_C(0x80)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="383" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a2fd35d0ea091e04caec504ff0042cf00" prot="public" static="no">
        <name>INT_FAST16_MAX</name>
        <initializer><ref refid="pstdint_8h_1a7eb2a8e2a1c65d6c9ad0f86154890baa" kindref="member">INT_LEAST16_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="703" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="703" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a169460a4e2a79138723d68d99372d958" prot="public" static="no">
        <name>INT_FAST16_MIN</name>
        <initializer><ref refid="pstdint_8h_1a1f91bfd5820c2f27af3d260fc75813e1" kindref="member">INT_LEAST16_MIN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="707" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="707" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ac96fa0f41b19e89f109e4f9913ca6635" prot="public" static="no">
        <name>INT_FAST32_MAX</name>
        <initializer><ref refid="pstdint_8h_1a5618711a0a54f722190a3a1219e278c2" kindref="member">INT_LEAST32_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="705" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="705" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ad93df1652ed0635513d5efe4f1219926" prot="public" static="no">
        <name>INT_FAST32_MIN</name>
        <initializer><ref refid="pstdint_8h_1a2360a536116dd734820a6b5b3d560ce7" kindref="member">INT_LEAST32_MIN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="708" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="708" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1acbcdb3bee0f5f904da5df8de69a80ca3" prot="public" static="no">
        <name>INT_FAST8_MAX</name>
        <initializer><ref refid="pstdint_8h_1aa05109908fb2770f632d2b646b9f85bf" kindref="member">INT_LEAST8_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="701" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="701" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aad8fb982cb19143efd5ee9a1a7a89390" prot="public" static="no">
        <name>INT_FAST8_MIN</name>
        <initializer><ref refid="pstdint_8h_1a3e986cad833f63f420962ff60eda87e5" kindref="member">INT_LEAST8_MIN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="706" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="706" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a7eb2a8e2a1c65d6c9ad0f86154890baa" prot="public" static="no">
        <name>INT_LEAST16_MAX</name>
        <initializer><ref refid="pstdint_8h_1ac58f2c111cc9989c86db2a7dc4fd84ca" kindref="member">INT16_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="666" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="666" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a1f91bfd5820c2f27af3d260fc75813e1" prot="public" static="no">
        <name>INT_LEAST16_MIN</name>
        <initializer><ref refid="pstdint_8h_1ad4e9955955b27624963643eac448118a" kindref="member">INT16_MIN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="670" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="670" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a5618711a0a54f722190a3a1219e278c2" prot="public" static="no">
        <name>INT_LEAST32_MAX</name>
        <initializer><ref refid="pstdint_8h_1a181807730d4a375f848ba139813ce04f" kindref="member">INT32_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="668" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="668" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a2360a536116dd734820a6b5b3d560ce7" prot="public" static="no">
        <name>INT_LEAST32_MIN</name>
        <initializer><ref refid="pstdint_8h_1a688eb21a22db27c2b2bd5836943cdcbe" kindref="member">INT32_MIN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="671" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="671" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aa05109908fb2770f632d2b646b9f85bf" prot="public" static="no">
        <name>INT_LEAST8_MAX</name>
        <initializer><ref refid="pstdint_8h_1aaf7f29f45f1a513b4748a4e5014ddf6a" kindref="member">INT8_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="664" column="12" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="664" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a3e986cad833f63f420962ff60eda87e5" prot="public" static="no">
        <name>INT_LEAST8_MIN</name>
        <initializer><ref refid="pstdint_8h_1aadcf2a81af243df333b31efa6461ab8e" kindref="member">INT8_MIN</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="669" column="12" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="669" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a6b556b8b5f86e13f1c2a6e8f9b9b4966" prot="public" static="no">
        <name>INTMAX_C</name>
        <param><defname>v</defname></param>
        <initializer>INT32_C(v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="635" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="635" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a022b9b0a3564d786244a4631847c37a3" prot="public" static="no">
        <name>INTMAX_MAX</name>
        <initializer><ref refid="pstdint_8h_1a181807730d4a375f848ba139813ce04f" kindref="member">INT32_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="632" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="632" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ac1bfd0b6e49224d67657fe9e7502623c" prot="public" static="no">
        <name>PRINTF_INT16_DEC_WIDTH</name>
        <initializer>&quot;5&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="588" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="588" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ab330e7280ae15049599408e99c73273b" prot="public" static="no">
        <name>PRINTF_INT16_HEX_WIDTH</name>
        <initializer>&quot;4&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="576" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="576" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aa7207fcbdc05d7cf877066028543c28b" prot="public" static="no">
        <name>PRINTF_INT32_DEC_WIDTH</name>
        <initializer>&quot;10&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="585" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="585" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ae6f04461e1801eefd3b64f3b851abed8" prot="public" static="no">
        <name>PRINTF_INT32_HEX_WIDTH</name>
        <initializer>&quot;8&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="573" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="573" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a9d70c86cd8202228d85db7aeed22497b" prot="public" static="no">
        <name>PRINTF_INT64_DEC_WIDTH</name>
        <initializer>&quot;19&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="582" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="582" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a6b45386978db7d05efc9c5ce140ba27c" prot="public" static="no">
        <name>PRINTF_INT64_HEX_WIDTH</name>
        <initializer>&quot;16&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="570" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="570" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a9b86583004a9dce380fe84b16de763b6" prot="public" static="no">
        <name>PRINTF_INT8_DEC_WIDTH</name>
        <initializer>&quot;3&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="591" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="591" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a32f0dce3fbd74aeeb4398ebc25abde7d" prot="public" static="no">
        <name>PRINTF_INT8_HEX_WIDTH</name>
        <initializer>&quot;2&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="579" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="579" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a9c269e817611c8344b5d13cdedbd4465" prot="public" static="no">
        <name>PRINTF_INTMAX_DEC_WIDTH</name>
        <initializer><ref refid="pstdint_8h_1aa7207fcbdc05d7cf877066028543c28b" kindref="member">PRINTF_INT32_DEC_WIDTH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="643" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="643" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1af88f43dbd7532680862099ef08421799" prot="public" static="no">
        <name>PRINTF_INTMAX_HEX_WIDTH</name>
        <initializer><ref refid="pstdint_8h_1ae6f04461e1801eefd3b64f3b851abed8" kindref="member">PRINTF_INT32_HEX_WIDTH</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="640" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="640" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ad53dd320ab0f0e9f4266bc225a3487df" prot="public" static="no">
        <name>PRINTF_INTMAX_MODIFIER</name>
        <initializer>PRINTF_INT32_MODIFIER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="637" column="12" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="637" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ae050ead9591f8e4e8368fe01076e7da4" prot="public" static="no">
        <name>PRINTF_LEAST16_MODIFIER</name>
        <initializer>PRINTF_INT16_MODIFIER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="662" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="662" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a861aa5c171bcd4ac1438845bf9b183e1" prot="public" static="no">
        <name>PRINTF_LEAST32_MODIFIER</name>
        <initializer>PRINTF_INT32_MODIFIER</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="661" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="661" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a0e3b0c90dacdb57518332964a357c342" prot="public" static="no">
        <name>PRINTF_UINT16_DEC_WIDTH</name>
        <initializer>&quot;5&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="600" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="600" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ac11fdcf6c32e2509ee94472cc9575907" prot="public" static="no">
        <name>PRINTF_UINT32_DEC_WIDTH</name>
        <initializer>&quot;10&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="597" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="597" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a580336588dd0e65aaa933f444d1a8a5c" prot="public" static="no">
        <name>PRINTF_UINT64_DEC_WIDTH</name>
        <initializer>&quot;20&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="594" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="594" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1adb1add877aeea93408adf50729b0e6c9" prot="public" static="no">
        <name>PRINTF_UINT8_DEC_WIDTH</name>
        <initializer>&quot;3&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="603" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="603" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a1f5fe9445d0ad0bee21bab1de4cc3e58" prot="public" static="no">
        <name>SIG_ATOMIC_MAX</name>
        <initializer>((((sig_atomic_t) 1) &lt;&lt; (sizeof (sig_atomic_t)*CHAR_BIT-1)) - 1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="802" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="802" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a3c75bb398badb69c7577b21486f9963f" prot="public" static="no">
        <name>SIZE_MAX</name>
        <initializer>(~(size_t)0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="358" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a0c58c27c9332ac03e508bb0674f15ad6" prot="public" static="no">
        <name>STDINT_H_UINTPTR_T_DEFINED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="794" column="12" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="794" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a3ea490c9b3617d4479bd80ef93cd5602" prot="public" static="no">
        <name>UINT16_MAX</name>
        <initializer>0xffff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="395" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="395" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" prot="public" static="no">
        <name>UINT32_MAX</name>
        <initializer>(0xffffffffUL)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="440" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="440" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aeb4e270a084ee26fe73e799861bd0252" prot="public" static="no">
        <name>UINT8_MAX</name>
        <initializer>0xff</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="368" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="368" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aed28ca63d9b222f6f1377358fe73a183" prot="public" static="no">
        <name>UINT_FAST16_MAX</name>
        <initializer><ref refid="pstdint_8h_1a6ef6a1a518bbf516ca8b0180b11c358f" kindref="member">UINT_LEAST16_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="702" column="9" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="702" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1ad51246a178143208b2db3315efd21c45" prot="public" static="no">
        <name>UINT_FAST32_MAX</name>
        <initializer><ref refid="pstdint_8h_1a70cad8bacc9a6db301e1cdc86cc8d571" kindref="member">UINT_LEAST32_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="704" column="9" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="704" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a2c6f97ea2d76d0cf6260c84046cdb44e" prot="public" static="no">
        <name>UINT_FAST8_MAX</name>
        <initializer><ref refid="pstdint_8h_1a2a80bde77ee1698d0f42f334adad4f2b" kindref="member">UINT_LEAST8_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="700" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="700" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a6ef6a1a518bbf516ca8b0180b11c358f" prot="public" static="no">
        <name>UINT_LEAST16_MAX</name>
        <initializer><ref refid="pstdint_8h_1a3ea490c9b3617d4479bd80ef93cd5602" kindref="member">UINT16_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="665" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="665" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a70cad8bacc9a6db301e1cdc86cc8d571" prot="public" static="no">
        <name>UINT_LEAST32_MAX</name>
        <initializer><ref refid="pstdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" kindref="member">UINT32_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="667" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="667" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a2a80bde77ee1698d0f42f334adad4f2b" prot="public" static="no">
        <name>UINT_LEAST8_MAX</name>
        <initializer><ref refid="pstdint_8h_1aeb4e270a084ee26fe73e799861bd0252" kindref="member">UINT8_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="663" column="11" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="663" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a572bc4e8e4eae73a2e1e6a158d3837a4" prot="public" static="no">
        <name>UINTMAX_C</name>
        <param><defname>v</defname></param>
        <initializer>UINT32_C(v)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="634" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="634" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1aa54fd5210434219e9027bfa0f0e325c8" prot="public" static="no">
        <name>UINTMAX_MAX</name>
        <initializer><ref refid="pstdint_8h_1ab5eb23180f7cc12b7d6c04a8ec067fdd" kindref="member">UINT32_MAX</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="633" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="633" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="pstdint_8h_1a37ae7009688ff03a821794e036e3e458" prot="public" static="no">
        <name>ULONG_LONG_MAX</name>
        <initializer>UINT64_C (18446744073709551615)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="552" column="10" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="552" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="pstdint_8h_1a43505f8e7533c9a3b521288e927416ad" prot="public" static="no">
        <type><ref refid="pstdint_8h_1a17f379713bed2a28ac431760401253cd" kindref="member">int_least16_t</ref></type>
        <definition>typedef int_least16_t int_fast16_t</definition>
        <argsstring></argsstring>
        <name>int_fast16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="696" column="25" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="696" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1adf31545bab2a12c9d12347af275bff5d" prot="public" static="no">
        <type><ref refid="pstdint_8h_1a2676b57a778795e5d0598970f1407f38" kindref="member">int_least32_t</ref></type>
        <definition>typedef int_least32_t int_fast32_t</definition>
        <argsstring></argsstring>
        <name>int_fast32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="698" column="25" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="698" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1a77eeea3cce53483bdce021415431c1b4" prot="public" static="no">
        <type><ref refid="pstdint_8h_1aadfd725efbf565422ab13db91ccca53c" kindref="member">int_least8_t</ref></type>
        <definition>typedef int_least8_t int_fast8_t</definition>
        <argsstring></argsstring>
        <name>int_fast8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="694" column="26" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="694" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1a17f379713bed2a28ac431760401253cd" prot="public" static="no">
        <type>int16_t</type>
        <definition>typedef int16_t int_least16_t</definition>
        <argsstring></argsstring>
        <name>int_least16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="657" column="21" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="657" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1a2676b57a778795e5d0598970f1407f38" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t int_least32_t</definition>
        <argsstring></argsstring>
        <name>int_least32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="659" column="21" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="659" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1aadfd725efbf565422ab13db91ccca53c" prot="public" static="no">
        <type>int8_t</type>
        <definition>typedef int8_t int_least8_t</definition>
        <argsstring></argsstring>
        <name>int_least8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="655" column="22" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="655" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1a1a3f3321a0166a004bde0a1e72553f2b" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t intmax_t</definition>
        <argsstring></argsstring>
        <name>intmax_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="630" column="19" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="630" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1ac2abfb965e6a308c5912f9e749740d4a" prot="public" static="no">
        <type>ptrdiff_t</type>
        <definition>typedef ptrdiff_t intptr_t</definition>
        <argsstring></argsstring>
        <name>intptr_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="792" column="21" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="792" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1ad22db665b43dc5f23ed8a42e015373f3" prot="public" static="no">
        <type><ref refid="pstdint_8h_1a4f3f6e6631cb4aaeadf1c59ff597b2fb" kindref="member">uint_least16_t</ref></type>
        <definition>typedef uint_least16_t uint_fast16_t</definition>
        <argsstring></argsstring>
        <name>uint_fast16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="697" column="24" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="697" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1a51c746994cab2a6465693f8746b7ab52" prot="public" static="no">
        <type><ref refid="pstdint_8h_1ac0af81082969e5e3f4d939b1de7002ac" kindref="member">uint_least32_t</ref></type>
        <definition>typedef uint_least32_t uint_fast32_t</definition>
        <argsstring></argsstring>
        <name>uint_fast32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="699" column="24" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="699" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1ae3a64b0efa0110e38359b34a0f265667" prot="public" static="no">
        <type><ref refid="pstdint_8h_1ac76e2383debd5a3b100514044828961a" kindref="member">uint_least8_t</ref></type>
        <definition>typedef uint_least8_t uint_fast8_t</definition>
        <argsstring></argsstring>
        <name>uint_fast8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="695" column="25" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="695" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1a4f3f6e6631cb4aaeadf1c59ff597b2fb" prot="public" static="no">
        <type>uint16_t</type>
        <definition>typedef uint16_t uint_least16_t</definition>
        <argsstring></argsstring>
        <name>uint_least16_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="658" column="20" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="658" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1ac0af81082969e5e3f4d939b1de7002ac" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t uint_least32_t</definition>
        <argsstring></argsstring>
        <name>uint_least32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="660" column="20" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="660" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1ac76e2383debd5a3b100514044828961a" prot="public" static="no">
        <type>uint8_t</type>
        <definition>typedef uint8_t uint_least8_t</definition>
        <argsstring></argsstring>
        <name>uint_least8_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="656" column="21" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="656" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="pstdint_8h_1a7643e68e022fde0d947e8dc252f716d6" prot="public" static="no">
        <type>uint32_t</type>
        <definition>typedef uint32_t uintmax_t</definition>
        <argsstring></argsstring>
        <name>uintmax_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/Compiler/pstdint.h" line="631" column="20" bodyfile="include/assimp/Compiler/pstdint.h" bodystart="631" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/><sp/>A<sp/>portable<sp/>stdint.h</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/>BSD<sp/>License:</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2005-2016<sp/>Paul<sp/>Hsieh</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/><sp/>Redistribution<sp/>and<sp/>use<sp/>in<sp/>source<sp/>and<sp/>binary<sp/>forms,<sp/>with<sp/>or<sp/>without</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>modification,<sp/>are<sp/>permitted<sp/>provided<sp/>that<sp/>the<sp/>following<sp/>conditions</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>met:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>1.<sp/>Redistributions<sp/>of<sp/>source<sp/>code<sp/>must<sp/>retain<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer.</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>2.<sp/>Redistributions<sp/>in<sp/>binary<sp/>form<sp/>must<sp/>reproduce<sp/>the<sp/>above<sp/>copyright</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>notice,<sp/>this<sp/>list<sp/>of<sp/>conditions<sp/>and<sp/>the<sp/>following<sp/>disclaimer<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>documentation<sp/>and/or<sp/>other<sp/>materials<sp/>provided<sp/>with<sp/>the<sp/>distribution.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/><sp/>3.<sp/>The<sp/>name<sp/>of<sp/>the<sp/>author<sp/>may<sp/>not<sp/>be<sp/>used<sp/>to<sp/>endorse<sp/>or<sp/>promote<sp/>products</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/>derived<sp/>from<sp/>this<sp/>software<sp/>without<sp/>specific<sp/>prior<sp/>written<sp/>permission.</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>BY<sp/>THE<sp/>AUTHOR<sp/>``AS<sp/>IS&apos;&apos;<sp/>AND<sp/>ANY<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/><sp/>IMPLIED<sp/>WARRANTIES,<sp/>INCLUDING,<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>THE<sp/>IMPLIED<sp/>WARRANTIES</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/><sp/>OF<sp/>MERCHANTABILITY<sp/>AND<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>ARE<sp/>DISCLAIMED.</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHOR<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>DIRECT,<sp/>INDIRECT,</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/><sp/>INCIDENTAL,<sp/>SPECIAL,<sp/>EXEMPLARY,<sp/>OR<sp/>CONSEQUENTIAL<sp/>DAMAGES<sp/>(INCLUDING,<sp/>BUT</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/><sp/>NOT<sp/>LIMITED<sp/>TO,<sp/>PROCUREMENT<sp/>OF<sp/>SUBSTITUTE<sp/>GOODS<sp/>OR<sp/>SERVICES;<sp/>LOSS<sp/>OF<sp/>USE,</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/><sp/>DATA,<sp/>OR<sp/>PROFITS;<sp/>OR<sp/>BUSINESS<sp/>INTERRUPTION)<sp/>HOWEVER<sp/>CAUSED<sp/>AND<sp/>ON<sp/>ANY</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/>THEORY<sp/>OF<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>CONTRACT,<sp/>STRICT<sp/>LIABILITY,<sp/>OR<sp/>TORT</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/>(INCLUDING<sp/>NEGLIGENCE<sp/>OR<sp/>OTHERWISE)<sp/>ARISING<sp/>IN<sp/>ANY<sp/>WAY<sp/>OUT<sp/>OF<sp/>THE<sp/>USE<sp/>OF</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/><sp/>THIS<sp/>SOFTWARE,<sp/>EVEN<sp/>IF<sp/>ADVISED<sp/>OF<sp/>THE<sp/>POSSIBILITY<sp/>OF<sp/>SUCH<sp/>DAMAGE.</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>****************************************************************************</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/><sp/>Version<sp/>0.1.15.4</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>ANSI<sp/>C<sp/>standard<sp/>committee,<sp/>for<sp/>the<sp/>C99<sp/>standard,<sp/>specified<sp/>the</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/><sp/>inclusion<sp/>of<sp/>a<sp/>new<sp/>standard<sp/>include<sp/>file<sp/>called<sp/>stdint.h.<sp/><sp/>This<sp/>is</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>very<sp/>useful<sp/>and<sp/>long<sp/>desired<sp/>include<sp/>file<sp/>which<sp/>contains<sp/>several</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*<sp/><sp/>very<sp/>precise<sp/>definitions<sp/>for<sp/>integer<sp/>scalar<sp/>types<sp/>that<sp/>is</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/><sp/>critically<sp/>important<sp/>for<sp/>making<sp/>portable<sp/>several<sp/>classes<sp/>of</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*<sp/><sp/>applications<sp/>including<sp/>cryptography,<sp/>hashing,<sp/>variable<sp/>length</highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/>*<sp/><sp/>integer<sp/>libraries<sp/>and<sp/>so<sp/>on.<sp/><sp/>But<sp/>for<sp/>most<sp/>developers<sp/>its<sp/>likely</highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/>*<sp/><sp/>useful<sp/>just<sp/>for<sp/>programming<sp/>sanity.</highlight></codeline>
<codeline lineno="44"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>problem<sp/>is<sp/>that<sp/>some<sp/>compiler<sp/>vendors<sp/>chose<sp/>to<sp/>ignore<sp/>the<sp/>C99</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*<sp/><sp/>standard<sp/>and<sp/>some<sp/>older<sp/>compilers<sp/>have<sp/>no<sp/>opportunity<sp/>to<sp/>be<sp/>updated.</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>Because<sp/>of<sp/>this<sp/>situation,<sp/>simply<sp/>including<sp/>stdint.h<sp/>in<sp/>your<sp/>code</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>makes<sp/>it<sp/>unportable.</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*<sp/><sp/>So<sp/>that&apos;s<sp/>what<sp/>this<sp/>file<sp/>is<sp/>all<sp/>about.<sp/><sp/>Its<sp/>an<sp/>attempt<sp/>to<sp/>build<sp/>a</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>single<sp/>universal<sp/>include<sp/>file<sp/>that<sp/>works<sp/>on<sp/>as<sp/>many<sp/>platforms<sp/>as</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/><sp/>possible<sp/>to<sp/>deliver<sp/>what<sp/>stdint.h<sp/>is<sp/>supposed<sp/>to.<sp/><sp/>Even<sp/>compilers</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/><sp/>that<sp/>already<sp/>come<sp/>with<sp/>stdint.h<sp/>can<sp/>use<sp/>this<sp/>file<sp/>instead<sp/>without</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*<sp/><sp/>any<sp/>loss<sp/>of<sp/>functionality.<sp/><sp/>A<sp/>few<sp/>things<sp/>that<sp/>should<sp/>be<sp/>noted<sp/>about</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>file:</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>1)<sp/>It<sp/>is<sp/>not<sp/>guaranteed<sp/>to<sp/>be<sp/>portable<sp/>and/or<sp/>present<sp/>an<sp/>identical</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>interface<sp/>on<sp/>all<sp/>platforms.<sp/><sp/>The<sp/>extreme<sp/>variability<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>ANSI<sp/>C<sp/>standard<sp/>makes<sp/>this<sp/>an<sp/>impossibility<sp/>right<sp/>from<sp/>the</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>very<sp/>get<sp/>go.<sp/>Its<sp/>really<sp/>only<sp/>meant<sp/>to<sp/>be<sp/>useful<sp/>for<sp/>the<sp/>vast</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>majority<sp/>of<sp/>platforms<sp/>that<sp/>possess<sp/>the<sp/>capability<sp/>of</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>implementing<sp/>usefully<sp/>and<sp/>precisely<sp/>defined,<sp/>standard<sp/>sized</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>integer<sp/>scalars.<sp/><sp/>Systems<sp/>which<sp/>are<sp/>not<sp/>intrinsically<sp/>2s</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>complement<sp/>may<sp/>produce<sp/>invalid<sp/>constants.</highlight></codeline>
<codeline lineno="65"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>2)<sp/>There<sp/>is<sp/>an<sp/>unavoidable<sp/>use<sp/>of<sp/>non-reserved<sp/>symbols.</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>3)<sp/>Other<sp/>standard<sp/>include<sp/>files<sp/>are<sp/>invoked.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>4)<sp/>This<sp/>file<sp/>may<sp/>come<sp/>in<sp/>conflict<sp/>with<sp/>future<sp/>platforms<sp/>that<sp/>do</highlight></codeline>
<codeline lineno="71"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>include<sp/>stdint.h.<sp/><sp/>The<sp/>hope<sp/>is<sp/>that<sp/>one<sp/>or<sp/>the<sp/>other<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>used<sp/>with<sp/>no<sp/>real<sp/>difference.</highlight></codeline>
<codeline lineno="73"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>5)<sp/>In<sp/>the<sp/>current<sp/>version,<sp/>if<sp/>your<sp/>platform<sp/>can&apos;t<sp/>represent</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t,<sp/>int16_t<sp/>and<sp/>int8_t,<sp/>it<sp/>just<sp/>dumps<sp/>out<sp/>with<sp/>a<sp/>compiler</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>6)<sp/>64<sp/>bit<sp/>integers<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>defined.<sp/><sp/>Test<sp/>for<sp/>their</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>presence<sp/>with<sp/>the<sp/>test:<sp/>#ifdef<sp/>INT64_MAX<sp/>or<sp/>#ifdef<sp/>UINT64_MAX.</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Note<sp/>that<sp/>this<sp/>is<sp/>different<sp/>from<sp/>the<sp/>C99<sp/>specification<sp/>which</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>requires<sp/>the<sp/>existence<sp/>of<sp/>64<sp/>bit<sp/>support<sp/>in<sp/>the<sp/>compiler.<sp/><sp/>If</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>this<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>your<sp/>platform,<sp/>yet<sp/>it<sp/>is<sp/>capable<sp/>of</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>dealing<sp/>with<sp/>64<sp/>bits<sp/>then<sp/>it<sp/>is<sp/>because<sp/>this<sp/>file<sp/>has<sp/>not<sp/>yet</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>been<sp/>extended<sp/>to<sp/>cover<sp/>all<sp/>of<sp/>your<sp/>system&apos;s<sp/>capabilities.</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>7)<sp/>(u)intptr_t<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>defined.<sp/><sp/>Test<sp/>for<sp/>its<sp/>presence</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>with<sp/>the<sp/>test:<sp/>#ifdef<sp/>PTRDIFF_MAX.<sp/><sp/>If<sp/>this<sp/>is<sp/>not<sp/>defined</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>your<sp/>platform,<sp/>then<sp/>it<sp/>is<sp/>because<sp/>this<sp/>file<sp/>has<sp/>not<sp/>yet</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>been<sp/>extended<sp/>to<sp/>cover<sp/>all<sp/>of<sp/>your<sp/>system&apos;s<sp/>capabilities,<sp/>not</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>because<sp/>its<sp/>optional.</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>8)<sp/>The<sp/>following<sp/>might<sp/>not<sp/>been<sp/>defined<sp/>even<sp/>if<sp/>your<sp/>platform<sp/>is</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>capable<sp/>of<sp/>defining<sp/>it:</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>WCHAR_MIN</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>WCHAR_MAX</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u)int64_t</highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PTRDIFF_MIN</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PTRDIFF_MAX</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u)intptr_t</highlight></codeline>
<codeline lineno="101"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="102"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>9)<sp/>The<sp/>following<sp/>have<sp/>not<sp/>been<sp/>defined:</highlight></codeline>
<codeline lineno="103"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>WINT_MIN</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>WINT_MAX</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/><sp/><sp/>10)<sp/>The<sp/>criteria<sp/>for<sp/>defining<sp/>(u)int_least(*)_t<sp/>isn&apos;t<sp/>clear,</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>except<sp/>for<sp/>systems<sp/>which<sp/>don&apos;t<sp/>have<sp/>a<sp/>type<sp/>that<sp/>precisely</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>8,<sp/>16,<sp/>or<sp/>32<sp/>bit<sp/>types<sp/>(which<sp/>this<sp/>include<sp/>file<sp/>does</highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>not<sp/>support<sp/>anyways).<sp/>Default<sp/>definitions<sp/>have<sp/>been<sp/>given.</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="112"><highlight class="comment"><sp/>*<sp/><sp/><sp/>11)<sp/>The<sp/>criteria<sp/>for<sp/>defining<sp/>(u)int_fast(*)_t<sp/>isn&apos;t<sp/>something<sp/>I</highlight></codeline>
<codeline lineno="113"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>would<sp/>trust<sp/>to<sp/>any<sp/>particular<sp/>compiler<sp/>vendor<sp/>or<sp/>the<sp/>ANSI<sp/>C</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>committee.<sp/><sp/>It<sp/>is<sp/>well<sp/>known<sp/>that<sp/>&quot;compatible<sp/>systems&quot;<sp/>are</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>commonly<sp/>created<sp/>that<sp/>have<sp/>very<sp/>different<sp/>performance</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>characteristics<sp/>from<sp/>the<sp/>systems<sp/>they<sp/>are<sp/>compatible<sp/>with,</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>especially<sp/>those<sp/>whose<sp/>vendors<sp/>make<sp/>both<sp/>the<sp/>compiler<sp/>and<sp/>the</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>system.<sp/><sp/>Default<sp/>definitions<sp/>have<sp/>been<sp/>given,<sp/>but<sp/>its<sp/>strongly</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>recommended<sp/>that<sp/>users<sp/>never<sp/>use<sp/>these<sp/>definitions<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>reason<sp/>(they<sp/>do<sp/>*NOT*<sp/>deliver<sp/>any<sp/>serious<sp/>guarantee<sp/>of</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>improved<sp/>performance<sp/>--<sp/>not<sp/>in<sp/>this<sp/>file,<sp/>nor<sp/>any<sp/>vendor&apos;s</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint.h).</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/><sp/><sp/>12)<sp/>The<sp/>following<sp/>macros:</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INTMAX_MODIFIER</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT64_MODIFIER</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT32_MODIFIER</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT16_MODIFIER</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_LEAST64_MODIFIER</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_LEAST32_MODIFIER</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_LEAST16_MODIFIER</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INTPTR_MODIFIER</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>are<sp/>strings<sp/>which<sp/>have<sp/>been<sp/>defined<sp/>as<sp/>the<sp/>modifiers<sp/>required</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>the<sp/>&quot;d&quot;,<sp/>&quot;u&quot;<sp/>and<sp/>&quot;x&quot;<sp/>printf<sp/>formats<sp/>to<sp/>correctly<sp/>output</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u)intmax_t,<sp/>(u)int64_t,<sp/>(u)int32_t,<sp/>(u)int16_t,<sp/>(u)least64_t,</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>(u)least32_t,<sp/>(u)least16_t<sp/>and<sp/>(u)intptr_t<sp/>types<sp/>respectively.</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INTPTR_MODIFIER<sp/>is<sp/>not<sp/>defined<sp/>for<sp/>some<sp/>systems<sp/>which</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>provide<sp/>their<sp/>own<sp/>stdint.h.<sp/><sp/>PRINTF_INT64_MODIFIER<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>defined<sp/>if<sp/>INT64_MAX<sp/>is<sp/>not<sp/>defined.<sp/><sp/>These<sp/>are<sp/>an<sp/>extension</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>beyond<sp/>what<sp/>C99<sp/>specifies<sp/>must<sp/>be<sp/>in<sp/>stdint.h.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>In<sp/>addition,<sp/>the<sp/>following<sp/>macros<sp/>are<sp/>defined:</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INTMAX_HEX_WIDTH</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT64_HEX_WIDTH</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT32_HEX_WIDTH</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT16_HEX_WIDTH</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT8_HEX_WIDTH</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INTMAX_DEC_WIDTH</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT64_DEC_WIDTH</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT32_DEC_WIDTH</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_INT16_DEC_WIDTH</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_UINT8_DEC_WIDTH</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_UINTMAX_DEC_WIDTH</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_UINT64_DEC_WIDTH</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_UINT32_DEC_WIDTH</highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_UINT16_DEC_WIDTH</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINTF_UINT8_DEC_WIDTH</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>Which<sp/>specifies<sp/>the<sp/>maximum<sp/>number<sp/>of<sp/>characters<sp/>required<sp/>to</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>the<sp/>number<sp/>of<sp/>that<sp/>type<sp/>in<sp/>either<sp/>hexadecimal<sp/>or<sp/>decimal.</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>These<sp/>are<sp/>an<sp/>extension<sp/>beyond<sp/>what<sp/>C99<sp/>specifies<sp/>must<sp/>be<sp/>in</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint.h.</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/>Compilers<sp/>tested<sp/>(all<sp/>with<sp/>0<sp/>warnings<sp/>at<sp/>their<sp/>highest<sp/>respective</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/>settings):<sp/>Borland<sp/>Turbo<sp/>C<sp/>2.0,<sp/>WATCOM<sp/>C/C++<sp/>11.0<sp/>(16<sp/>bits<sp/>and<sp/>32</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/><sp/>bits),<sp/>Microsoft<sp/>Visual<sp/>C++<sp/>6.0<sp/>(32<sp/>bit),<sp/>Microsoft<sp/>Visual<sp/>Studio</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/>.net<sp/>(VC7),<sp/>Intel<sp/>C++<sp/>4.0,<sp/>GNU<sp/>gcc<sp/>v3.3.3</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>file<sp/>should<sp/>be<sp/>considered<sp/>a<sp/>work<sp/>in<sp/>progress.<sp/><sp/>Suggestions<sp/>for</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/><sp/>improvements,<sp/>especially<sp/>those<sp/>which<sp/>increase<sp/>coverage<sp/>are<sp/>strongly</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/><sp/>encouraged.</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/><sp/>Acknowledgements</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>following<sp/>people<sp/>have<sp/>made<sp/>significant<sp/>contributions<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/><sp/>development<sp/>and<sp/>testing<sp/>of<sp/>this<sp/>file:</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/><sp/>Chris<sp/>Howie</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/><sp/>John<sp/>Steele<sp/>Scott</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/><sp/>Dave<sp/>Thorup</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/><sp/>John<sp/>Dill</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/><sp/>Florian<sp/>Wobbe</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/><sp/>Christopher<sp/>Sean<sp/>Morrison</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*<sp/><sp/>Mikkel<sp/>Fahnoe<sp/>Jorgensen</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/><sp/>For<sp/>gcc<sp/>with<sp/>_STDINT_H,<sp/>fill<sp/>in<sp/>the<sp/>PRINTF_INT*_MODIFIER<sp/>macros,<sp/>and</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/><sp/>do<sp/>nothing<sp/>else.<sp/><sp/>On<sp/>the<sp/>Mac<sp/>OS<sp/>X<sp/>version<sp/>of<sp/>gcc<sp/>this<sp/>is<sp/>_STDINT_H_.</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>((defined(__SUNPRO_C)<sp/>&amp;&amp;<sp/>__SUNPRO_C<sp/>&gt;=<sp/>0x570)<sp/>||<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_MSC_VER<sp/>&gt;=<sp/>1600)<sp/>||<sp/>(defined(__STDC__)<sp/>&amp;&amp;<sp/>__STDC__<sp/>&amp;&amp;<sp/>defined(__STDC_VERSION__)<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L)<sp/>||<sp/>(defined<sp/>(__WATCOMC__)<sp/>&amp;&amp;<sp/>(defined<sp/>(_STDINT_H_INCLUDED)<sp/>||<sp/>__WATCOMC__<sp/>&gt;=<sp/>1250))<sp/>||<sp/>(defined(__GNUC__)<sp/>&amp;&amp;<sp/>(__GNUC__<sp/>&gt;<sp/>3<sp/>||<sp/>defined(_STDINT_H)<sp/>||<sp/>defined(_STDINT_H_)<sp/>||<sp/>defined<sp/>(__UINT_FAST64_TYPE__))<sp/>))<sp/>&amp;&amp;<sp/>!defined<sp/>(_PSTDINT_H_INCLUDED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PSTDINT_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>(defined(__x86_64__)<sp/>||<sp/>defined(__ppc64__))<sp/>&amp;&amp;<sp/>!(defined(__APPLE__)<sp/>&amp;&amp;<sp/>defined(__MACH__))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INT64_MODIFIER<sp/>&quot;l&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INT64_MODIFIER<sp/>&quot;ll&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>if<sp/>(UINT_MAX<sp/>==<sp/>UINT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;l&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT16_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT16_MODIFIER<sp/>&quot;h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INTMAX_MODIFIER<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT64_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT64_HEX_WIDTH<sp/>&quot;16&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT64_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT64_HEX_WIDTH<sp/>&quot;16&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_HEX_WIDTH<sp/>&quot;8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT32_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT32_HEX_WIDTH<sp/>&quot;8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT16_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT16_HEX_WIDTH<sp/>&quot;4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT16_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT16_HEX_WIDTH<sp/>&quot;4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT8_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT8_HEX_WIDTH<sp/>&quot;2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT8_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT8_HEX_WIDTH<sp/>&quot;2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT64_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT64_DEC_WIDTH<sp/>&quot;19&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT64_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT64_DEC_WIDTH<sp/>&quot;20&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_DEC_WIDTH<sp/>&quot;10&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT32_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT32_DEC_WIDTH<sp/>&quot;10&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT16_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT16_DEC_WIDTH<sp/>&quot;5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT16_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT16_DEC_WIDTH<sp/>&quot;5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT8_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT8_DEC_WIDTH<sp/>&quot;3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINT8_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINT8_DEC_WIDTH<sp/>&quot;3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INTMAX_HEX_WIDTH<sp/>PRINTF_UINT64_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINTMAX_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINTMAX_HEX_WIDTH<sp/>PRINTF_UINT64_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INTMAX_DEC_WIDTH<sp/>PRINTF_UINT64_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_UINTMAX_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_UINTMAX_DEC_WIDTH<sp/>PRINTF_UINT64_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/><sp/>Something<sp/>really<sp/>weird<sp/>is<sp/>going<sp/>on<sp/>with<sp/>Open<sp/>Watcom.<sp/><sp/>Just<sp/>pull<sp/>some<sp/>of</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/><sp/>these<sp/>duplicated<sp/>definitions<sp/>from<sp/>Open<sp/>Watcom&apos;s<sp/>stdint.h<sp/>file<sp/>for<sp/>now.</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined<sp/>(__WATCOMC__)<sp/>&amp;&amp;<sp/>__WATCOMC__<sp/>&gt;=<sp/>1250</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INT64_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INT64_C(x)<sp/><sp/><sp/>(x<sp/>+<sp/>(INT64_MAX<sp/>-<sp/>INT64_MAX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(UINT64_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT64_C(x)<sp/><sp/>(x<sp/>+<sp/>(UINT64_MAX<sp/>-<sp/>UINT64_MAX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INT32_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INT32_C(x)<sp/><sp/><sp/>(x<sp/>+<sp/>(INT32_MAX<sp/>-<sp/>INT32_MAX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(UINT32_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT32_C(x)<sp/><sp/>(x<sp/>+<sp/>(UINT32_MAX<sp/>-<sp/>UINT32_MAX))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INT16_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INT16_C(x)<sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(UINT16_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT16_C(x)<sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INT8_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INT8_C(x)<sp/><sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(UINT8_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT8_C(x)<sp/><sp/>(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(UINT64_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT64_MAX<sp/><sp/>18446744073709551615ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INT64_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INT64_MAX<sp/><sp/>9223372036854775807LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(UINT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT32_MAX<sp/><sp/>4294967295UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INT32_MAX<sp/><sp/>2147483647L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INTMAX_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INTMAX_MAX<sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>!defined<sp/>(INTMAX_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INTMAX_MIN<sp/>INT64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="341"><highlight class="comment"><sp/>*<sp/><sp/>I<sp/>have<sp/>no<sp/>idea<sp/>what<sp/>is<sp/>the<sp/>truly<sp/>correct<sp/>thing<sp/>to<sp/>do<sp/>on<sp/>older<sp/>Solaris.</highlight></codeline>
<codeline lineno="342"><highlight class="comment"><sp/>*<sp/><sp/>From<sp/>some<sp/>online<sp/>discussions,<sp/>this<sp/>seems<sp/>to<sp/>be<sp/>what<sp/>is<sp/>being</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/><sp/>recommended.<sp/><sp/>For<sp/>people<sp/>who<sp/>actually<sp/>are<sp/>developing<sp/>on<sp/>older<sp/>Solaris,</highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/><sp/>what<sp/>I<sp/>would<sp/>like<sp/>to<sp/>know<sp/>is,<sp/>does<sp/>this<sp/>define<sp/>all<sp/>of<sp/>the<sp/>relevant</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/><sp/>macros<sp/>of<sp/>a<sp/>complete<sp/>stdint.h?<sp/><sp/>Remember,<sp/>in<sp/>pstdint.h<sp/>64<sp/>bit<sp/>is</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/><sp/>considered<sp/>optional.</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(__SUNPRO_C)<sp/>&amp;&amp;<sp/>__SUNPRO_C<sp/>&gt;=<sp/>0x420)<sp/>&amp;&amp;<sp/>!defined(_PSTDINT_H_INCLUDED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sys/inttypes.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PSTDINT_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_PSTDINT_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_PSTDINT_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIZE_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SIZE_MAX<sp/>(~(size_t)0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="362"><highlight class="comment"><sp/>*<sp/><sp/>Deduce<sp/>the<sp/>type<sp/>assignments<sp/>from<sp/>limits.h<sp/>under<sp/>the<sp/>assumption<sp/>that</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/><sp/>integer<sp/>sizes<sp/>in<sp/>bits<sp/>are<sp/>powers<sp/>of<sp/>2,<sp/>and<sp/>follow<sp/>the<sp/>ANSI</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/><sp/>definitions.</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT8_MAX<sp/>0xff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(uint8_t)<sp/>&amp;&amp;<sp/>!defined(_UINT8_T)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>(UCHAR_MAX<sp/>==<sp/>UINT8_MAX)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>uint8_t;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT8_C(v)<sp/>((uint8_t)<sp/>v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;Platform<sp/>not<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT8_MAX<sp/>0x7f</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT8_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT8_MIN<sp/>INT8_C(0x80)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(int8_t)<sp/>&amp;&amp;<sp/>!defined(_INT8_T)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>(SCHAR_MAX<sp/>==<sp/>INT8_MAX)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>int8_t;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>INT8_C(v)<sp/>((int8_t)<sp/>v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>error<sp/>&quot;Platform<sp/>not<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT16_MAX<sp/>0xffff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(uint16_t)<sp/>&amp;&amp;<sp/>!defined(_UINT16_T)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(UINT_MAX<sp/>==<sp/>UINT16_MAX)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uint16_t;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT16_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT16_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT16_C(v)<sp/>((uint16_t)<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(USHRT_MAX<sp/>==<sp/>UINT16_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>uint16_t;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT16_C(v)<sp/>((uint16_t)<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT16_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT16_MODIFIER<sp/>&quot;h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Platform<sp/>not<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT16_MAX<sp/>0x7fff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT16_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT16_MIN<sp/>INT16_C(0x8000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(int16_t)<sp/>&amp;&amp;<sp/>!defined(_INT16_T)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(INT_MAX<sp/>==<sp/>INT16_MAX)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int16_t;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT16_C(v)<sp/>((int16_t)<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT16_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT16_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(SHRT_MAX<sp/>==<sp/>INT16_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>int16_t;</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT16_C(v)<sp/>((int16_t)<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT16_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT16_MODIFIER<sp/>&quot;h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Platform<sp/>not<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>UINT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT32_MAX<sp/>(0xffffffffUL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(uint32_t)<sp/>&amp;&amp;<sp/>!defined(_UINT32_T)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(ULONG_MAX<sp/>==<sp/>UINT32_MAX)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>uint32_t;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT32_C(v)<sp/>v<sp/>##<sp/>UL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;l&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(UINT_MAX<sp/>==<sp/>UINT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>uint32_t;</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT32_C(v)<sp/>v<sp/>##<sp/>U</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(USHRT_MAX<sp/>==<sp/>UINT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>uint32_t;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT32_C(v)<sp/>((unsigned<sp/>short)<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Platform<sp/>not<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT32_MAX<sp/>(0x7fffffffL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>INT32_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT32_MIN<sp/>INT32_C(0x80000000)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(int32_t)<sp/>&amp;&amp;<sp/>!defined(_INT32_T)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(LONG_MAX<sp/>==<sp/>INT32_MAX)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int32_t;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT32_C(v)<sp/>v<sp/>##<sp/>L</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;l&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(INT_MAX<sp/>==<sp/>INT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>int32_t;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT32_C(v)<sp/>v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>(SHRT_MAX<sp/>==<sp/>INT32_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">signed</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/>int32_t;</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT32_C(v)<sp/>((short)<sp/>(v))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INT32_MODIFIER<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="491"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight><highlight class="preprocessor">#error<sp/>&quot;Platform<sp/>not<sp/>supported&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>macro<sp/>stdint_int64_defined<sp/>is<sp/>temporarily<sp/>used<sp/>to<sp/>record</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*<sp/><sp/>whether<sp/>or<sp/>not<sp/>64<sp/>integer<sp/>support<sp/>is<sp/>available.<sp/><sp/>It<sp/>must<sp/>be</highlight></codeline>
<codeline lineno="499"><highlight class="comment"><sp/>*<sp/><sp/>defined<sp/>for<sp/>any<sp/>64<sp/>integer<sp/>extensions<sp/>for<sp/>new<sp/>platforms<sp/>that<sp/>are</highlight></codeline>
<codeline lineno="500"><highlight class="comment"><sp/>*<sp/><sp/>added.</highlight></codeline>
<codeline lineno="501"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(__STDC__)<sp/>&amp;&amp;<sp/>defined(__STDC_VERSION__))<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>(__STDC__<sp/>&amp;&amp;<sp/>__STDC_VERSION__<sp/>&gt;=<sp/>199901L)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int64_t;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>uint64_t;</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UINT64_C(v)<sp/>v<sp/>##<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/><sp/>INT64_C(v)<sp/>v<sp/>##<sp/>LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INT64_MODIFIER<sp/>&quot;ll&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"></highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(stdint_int64_defined)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/>__extension__<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int64_t;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/>__extension__<sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>uint64_t;</highlight></codeline>
<codeline lineno="522"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UINT64_C(v)<sp/>v<sp/>##<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/><sp/>INT64_C(v)<sp/>v<sp/>##<sp/>LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INT64_MODIFIER<sp/>&quot;ll&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined(__MWERKS__)<sp/>||<sp/>defined<sp/>(__SUNPRO_C)<sp/>||<sp/>defined<sp/>(__SUNPRO_CC)<sp/>||<sp/>defined<sp/>(__APPLE_CC__)<sp/>||<sp/>defined<sp/>(_LONG_LONG)<sp/>||<sp/>defined<sp/>(_CRAYC)<sp/>||<sp/>defined<sp/>(S_SPLINT_S)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>int64_t;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>uint64_t;</highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UINT64_C(v)<sp/>v<sp/>##<sp/>ULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/><sp/>INT64_C(v)<sp/>v<sp/>##<sp/>LL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INT64_MODIFIER<sp/>&quot;ll&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>(defined(__WATCOMC__)<sp/>&amp;&amp;<sp/>defined(__WATCOM_INT64__))<sp/>||<sp/>(defined(_MSC_VER)<sp/>&amp;&amp;<sp/>_INTEGRAL_MAX_BITS<sp/>&gt;=<sp/>64)<sp/>||<sp/>(defined<sp/>(__BORLANDC__)<sp/>&amp;&amp;<sp/>__BORLANDC__<sp/>&gt;<sp/>0x460)<sp/>||<sp/>defined<sp/>(__alpha)<sp/>||<sp/>defined<sp/>(__DECC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__int64<sp/>int64_t;</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>__int64<sp/>uint64_t;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>UINT64_C(v)<sp/>v<sp/>##<sp/>UI64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/><sp/>INT64_C(v)<sp/>v<sp/>##<sp/>I64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INT64_MODIFIER<sp/>&quot;I64&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(LONG_LONG_MAX)<sp/>&amp;&amp;<sp/>defined<sp/>(INT64_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>LONG_LONG_MAX<sp/>INT64_C<sp/>(9223372036854775807)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ULONG_LONG_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>ULONG_LONG_MAX<sp/>UINT64_C<sp/>(18446744073709551615)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(INT64_MAX)<sp/>&amp;&amp;<sp/>defined<sp/>(INT64_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT64_MAX<sp/>INT64_C<sp/>(9223372036854775807)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(INT64_MIN)<sp/>&amp;&amp;<sp/>defined<sp/>(INT64_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>INT64_MIN<sp/>INT64_C<sp/>(-9223372036854775808)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined<sp/>(UINT64_MAX)<sp/>&amp;&amp;<sp/>defined<sp/>(INT64_C)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT64_MAX<sp/>UINT64_C<sp/>(18446744073709551615)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="566"><highlight class="comment"><sp/>*<sp/><sp/>Width<sp/>of<sp/>hexadecimal<sp/>for<sp/>number<sp/>field.</highlight></codeline>
<codeline lineno="567"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT64_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT64_HEX_WIDTH<sp/>&quot;16&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT32_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT32_HEX_WIDTH<sp/>&quot;8&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT16_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT16_HEX_WIDTH<sp/>&quot;4&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT8_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT8_HEX_WIDTH<sp/>&quot;2&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT64_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT64_DEC_WIDTH<sp/>&quot;19&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT32_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT32_DEC_WIDTH<sp/>&quot;10&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT16_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT16_DEC_WIDTH<sp/>&quot;5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_INT8_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_INT8_DEC_WIDTH<sp/>&quot;3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_UINT64_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_UINT64_DEC_WIDTH<sp/>&quot;20&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_UINT32_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_UINT32_DEC_WIDTH<sp/>&quot;10&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_UINT16_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_UINT16_DEC_WIDTH<sp/>&quot;5&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PRINTF_UINT8_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_UINT8_DEC_WIDTH<sp/>&quot;3&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*<sp/><sp/>Ok,<sp/>lets<sp/>not<sp/>worry<sp/>about<sp/>128<sp/>bit<sp/>integers<sp/>for<sp/>now.<sp/><sp/>Moore&apos;s<sp/>law<sp/>says</highlight></codeline>
<codeline lineno="608"><highlight class="comment"><sp/>*<sp/><sp/>we<sp/>don&apos;t<sp/>need<sp/>to<sp/>worry<sp/>about<sp/>that<sp/>until<sp/>about<sp/>2040<sp/>at<sp/>which<sp/>point</highlight></codeline>
<codeline lineno="609"><highlight class="comment"><sp/>*<sp/><sp/>we&apos;ll<sp/>have<sp/>bigger<sp/>things<sp/>to<sp/>worry<sp/>about.</highlight></codeline>
<codeline lineno="610"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int64_t<sp/><ref refid="pstdint_8h_1a1a3f3321a0166a004bde0a1e72553f2b" kindref="member">intmax_t</ref>;</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/><ref refid="pstdint_8h_1a7643e68e022fde0d947e8dc252f716d6" kindref="member">uintmax_t</ref>;</highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INTMAX_MAX<sp/><sp/><sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INTMAX_MIN<sp/><sp/><sp/>INT64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINTMAX_MAX<sp/><sp/>UINT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINTMAX_C(v)<sp/>UINT64_C(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INTMAX_C(v)<sp/><sp/>INT64_C(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INTMAX_MODIFIER<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INTMAX_HEX_WIDTH<sp/>PRINTF_INT64_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INTMAX_DEC_WIDTH<sp/>PRINTF_INT64_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="pstdint_8h_1a1a3f3321a0166a004bde0a1e72553f2b" kindref="member">intmax_t</ref>;</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="pstdint_8h_1a7643e68e022fde0d947e8dc252f716d6" kindref="member">uintmax_t</ref>;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INTMAX_MAX<sp/><sp/><sp/>INT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINTMAX_MAX<sp/><sp/>UINT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINTMAX_C(v)<sp/>UINT32_C(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INTMAX_C(v)<sp/><sp/>INT32_C(v)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_INTMAX_MODIFIER<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INTMAX_HEX_WIDTH<sp/>PRINTF_INT32_HEX_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>PRINTF_INTMAX_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>PRINTF_INTMAX_DEC_WIDTH<sp/>PRINTF_INT32_DEC_WIDTH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="648"><highlight class="comment"><sp/>*<sp/><sp/>Because<sp/>this<sp/>file<sp/>currently<sp/>only<sp/>supports<sp/>platforms<sp/>which<sp/>have</highlight></codeline>
<codeline lineno="649"><highlight class="comment"><sp/>*<sp/><sp/>precise<sp/>powers<sp/>of<sp/>2<sp/>as<sp/>bit<sp/>sizes<sp/>for<sp/>the<sp/>default<sp/>integers,<sp/>the</highlight></codeline>
<codeline lineno="650"><highlight class="comment"><sp/>*<sp/><sp/>least<sp/>definitions<sp/>are<sp/>all<sp/>trivial.<sp/><sp/>Its<sp/>possible<sp/>that<sp/>a<sp/>future</highlight></codeline>
<codeline lineno="651"><highlight class="comment"><sp/>*<sp/><sp/>version<sp/>of<sp/>this<sp/>file<sp/>could<sp/>have<sp/>different<sp/>definitions.</highlight></codeline>
<codeline lineno="652"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>stdint_least_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/>int8_t<sp/><sp/><sp/><ref refid="pstdint_8h_1aadfd725efbf565422ab13db91ccca53c" kindref="member">int_least8_t</ref>;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/>uint8_t<sp/><sp/><ref refid="pstdint_8h_1ac76e2383debd5a3b100514044828961a" kindref="member">uint_least8_t</ref>;</highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/>int16_t<sp/><sp/><ref refid="pstdint_8h_1a17f379713bed2a28ac431760401253cd" kindref="member">int_least16_t</ref>;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint16_t<sp/><ref refid="pstdint_8h_1a4f3f6e6631cb4aaeadf1c59ff597b2fb" kindref="member">uint_least16_t</ref>;</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/>int32_t<sp/><sp/><ref refid="pstdint_8h_1a2676b57a778795e5d0598970f1407f38" kindref="member">int_least32_t</ref>;</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32_t<sp/><ref refid="pstdint_8h_1ac0af81082969e5e3f4d939b1de7002ac" kindref="member">uint_least32_t</ref>;</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_LEAST32_MODIFIER<sp/>PRINTF_INT32_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>PRINTF_LEAST16_MODIFIER<sp/>PRINTF_INT16_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>UINT_LEAST8_MAX<sp/><sp/>UINT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>INT_LEAST8_MAX<sp/><sp/><sp/>INT8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT_LEAST16_MAX<sp/>UINT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INT_LEAST16_MAX<sp/><sp/>INT16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT_LEAST32_MAX<sp/>UINT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INT_LEAST32_MAX<sp/><sp/>INT32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/><sp/>INT_LEAST8_MIN<sp/><sp/><sp/>INT8_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INT_LEAST16_MIN<sp/><sp/>INT16_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INT_LEAST32_MIN<sp/><sp/>INT32_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/>int64_t<sp/><sp/>int_least64_t;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64_t<sp/>uint_least64_t;</highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>PRINTF_LEAST64_MODIFIER<sp/>PRINTF_INT64_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/>UINT_LEAST64_MAX<sp/>UINT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/><sp/>INT_LEAST64_MAX<sp/><sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/>define<sp/><sp/>INT_LEAST64_MIN<sp/><sp/>INT64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>stdint_least_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>ANSI<sp/>C<sp/>committee<sp/>pretending<sp/>to<sp/>know<sp/>or<sp/>specify<sp/>anything<sp/>about</highlight></codeline>
<codeline lineno="685"><highlight class="comment"><sp/>*<sp/><sp/>performance<sp/>is<sp/>the<sp/>epitome<sp/>of<sp/>misguided<sp/>arrogance.<sp/><sp/>The<sp/>mandate<sp/>of</highlight></codeline>
<codeline lineno="686"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>file<sp/>is<sp/>to<sp/>*ONLY*<sp/>ever<sp/>support<sp/>that<sp/>absolute<sp/>minimum</highlight></codeline>
<codeline lineno="687"><highlight class="comment"><sp/>*<sp/><sp/>definition<sp/>of<sp/>the<sp/>fast<sp/>integer<sp/>types,<sp/>for<sp/>compatibility<sp/>purposes.</highlight></codeline>
<codeline lineno="688"><highlight class="comment"><sp/>*<sp/><sp/>No<sp/>extensions,<sp/>and<sp/>no<sp/>attempt<sp/>to<sp/>suggest<sp/>what<sp/>may<sp/>or<sp/>may<sp/>not<sp/>be<sp/>a</highlight></codeline>
<codeline lineno="689"><highlight class="comment"><sp/>*<sp/><sp/>faster<sp/>integer<sp/>type<sp/>will<sp/>ever<sp/>be<sp/>made<sp/>in<sp/>this<sp/>file.<sp/><sp/>Developers<sp/>are</highlight></codeline>
<codeline lineno="690"><highlight class="comment"><sp/>*<sp/><sp/>warned<sp/>to<sp/>stay<sp/>away<sp/>from<sp/>these<sp/>types<sp/>when<sp/>using<sp/>this<sp/>or<sp/>any<sp/>other</highlight></codeline>
<codeline lineno="691"><highlight class="comment"><sp/>*<sp/><sp/>stdint.h.</highlight></codeline>
<codeline lineno="692"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="pstdint_8h_1aadfd725efbf565422ab13db91ccca53c" kindref="member">int_least8_t</ref><sp/><sp/><sp/><ref refid="pstdint_8h_1a77eeea3cce53483bdce021415431c1b4" kindref="member">int_fast8_t</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><ref refid="pstdint_8h_1ac76e2383debd5a3b100514044828961a" kindref="member">uint_least8_t</ref><sp/><sp/><ref refid="pstdint_8h_1ae3a64b0efa0110e38359b34a0f265667" kindref="member">uint_fast8_t</ref>;</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><ref refid="pstdint_8h_1a17f379713bed2a28ac431760401253cd" kindref="member">int_least16_t</ref><sp/><sp/><ref refid="pstdint_8h_1a43505f8e7533c9a3b521288e927416ad" kindref="member">int_fast16_t</ref>;</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="pstdint_8h_1a4f3f6e6631cb4aaeadf1c59ff597b2fb" kindref="member">uint_least16_t</ref><sp/><ref refid="pstdint_8h_1ad22db665b43dc5f23ed8a42e015373f3" kindref="member">uint_fast16_t</ref>;</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/><ref refid="pstdint_8h_1a2676b57a778795e5d0598970f1407f38" kindref="member">int_least32_t</ref><sp/><sp/><ref refid="pstdint_8h_1adf31545bab2a12c9d12347af275bff5d" kindref="member">int_fast32_t</ref>;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="pstdint_8h_1ac0af81082969e5e3f4d939b1de7002ac" kindref="member">uint_least32_t</ref><sp/><ref refid="pstdint_8h_1a51c746994cab2a6465693f8746b7ab52" kindref="member">uint_fast32_t</ref>;</highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>UINT_FAST8_MAX<sp/><sp/>UINT_LEAST8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/>INT_FAST8_MAX<sp/><sp/><sp/>INT_LEAST8_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_FAST16_MAX<sp/>UINT_LEAST16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>INT_FAST16_MAX<sp/><sp/>INT_LEAST16_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UINT_FAST32_MAX<sp/>UINT_LEAST32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>INT_FAST32_MAX<sp/><sp/>INT_LEAST32_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/><sp/>INT_FAST8_MIN<sp/><sp/><sp/>INT_LEAST8_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>INT_FAST16_MIN<sp/><sp/>INT_LEAST16_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/><sp/>INT_FAST32_MIN<sp/><sp/>INT_LEAST32_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><sp/>int_least64_t<sp/><sp/>int_fast64_t;</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint_least64_t<sp/>uint_fast64_t;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>UINT_FAST64_MAX<sp/>UINT_LEAST64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INT_FAST64_MAX<sp/><sp/>INT_LEAST64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/><sp/>INT_FAST64_MIN<sp/><sp/>INT_LEAST64_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>stdint_int64_defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="720"><highlight class="comment"><sp/>*<sp/><sp/>Whatever<sp/>piecemeal,<sp/>per<sp/>compiler<sp/>thing<sp/>we<sp/>can<sp/>do<sp/>about<sp/>the<sp/>wchar_t</highlight></codeline>
<codeline lineno="721"><highlight class="comment"><sp/>*<sp/><sp/>type<sp/>limits.</highlight></codeline>
<codeline lineno="722"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__WATCOMC__)<sp/>||<sp/>defined(_MSC_VER)<sp/>||<sp/>defined<sp/>(__GNUC__)<sp/>&amp;&amp;<sp/>!defined(vxWorks)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>WCHAR_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WCHAR_MIN<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="728"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifndef<sp/>WCHAR_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>WCHAR_MAX<sp/>((wchar_t)-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight></codeline>
<codeline lineno="734"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="735"><highlight class="comment"><sp/>*<sp/><sp/>Whatever<sp/>piecemeal,<sp/>per<sp/>compiler/platform<sp/>thing<sp/>we<sp/>can<sp/>do<sp/>about<sp/>the</highlight></codeline>
<codeline lineno="736"><highlight class="comment"><sp/>*<sp/><sp/>(u)intptr_t<sp/>types<sp/>and<sp/>limits.</highlight></codeline>
<codeline lineno="737"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined<sp/>(_MSC_VER)<sp/>&amp;&amp;<sp/>defined<sp/>(_UINTPTR_T_DEFINED))<sp/>||<sp/>defined<sp/>(_UINTPTR_T)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>STDINT_H_UINTPTR_T_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STDINT_H_UINTPTR_T_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>if<sp/>defined<sp/>(__alpha__)<sp/>||<sp/>defined<sp/>(__ia64__)<sp/>||<sp/>defined<sp/>(__x86_64__)<sp/>||<sp/>defined<sp/>(_WIN64)<sp/>||<sp/>defined<sp/>(__ppc64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_intptr_bits<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined<sp/>(__WATCOMC__)<sp/>||<sp/>defined<sp/>(__TURBOC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>if<sp/>defined(__TINY__)<sp/>||<sp/>defined(__SMALL__)<sp/>||<sp/>defined(__MEDIUM__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>stdint_intptr_bits<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="750"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>stdint_intptr_bits<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined<sp/>(__i386__)<sp/>||<sp/>defined<sp/>(_WIN32)<sp/>||<sp/>defined<sp/>(WIN32)<sp/>||<sp/>defined<sp/>(__ppc64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_intptr_bits<sp/>32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>elif<sp/>defined<sp/>(__INTEL_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO<sp/>--<sp/>what<sp/>did<sp/>Intel<sp/>do<sp/>about<sp/>x86-64?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#error<sp/>&quot;This<sp/>platform<sp/>might<sp/>not<sp/>be<sp/>supported<sp/>yet&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"></highlight></codeline>
<codeline lineno="760"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>ifdef<sp/>stdint_intptr_bits</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_intptr_glue3_i(a,b,c)<sp/><sp/>a##b##c</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>define<sp/>stdint_intptr_glue3(a,b,c)<sp/><sp/><sp/><sp/>stdint_intptr_glue3_i(a,b,c)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PRINTF_INTPTR_MODIFIER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>PRINTF_INTPTR_MODIFIER<sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(PRINTF_INT,stdint_intptr_bits,_MODIFIER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PTRDIFF_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>PTRDIFF_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(INT,stdint_intptr_bits,_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>PTRDIFF_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>PTRDIFF_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(INT,stdint_intptr_bits,_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>UINTPTR_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>UINTPTR_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(UINT,stdint_intptr_bits,_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>INTPTR_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>INTPTR_MAX<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(INT,stdint_intptr_bits,_MAX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>INTPTR_MIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>INTPTR_MIN<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(INT,stdint_intptr_bits,_MIN)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>INTPTR_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>INTPTR_C(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(INT,stdint_intptr_bits,_C)(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>ifndef<sp/>UINTPTR_C</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/><sp/><sp/>define<sp/>UINTPTR_C(x)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdint_intptr_glue3(UINT,stdint_intptr_bits,_C)(x)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/><sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stdint_intptr_glue3(uint,stdint_intptr_bits,_t)<sp/>uintptr_t;</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>stdint_intptr_glue3(<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,stdint_intptr_bits,_t)<sp/><sp/><ref refid="pstdint_8h_1ac2abfb965e6a308c5912f9e749740d4a" kindref="member">intptr_t</ref>;</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO<sp/>--<sp/>This<sp/>following<sp/>is<sp/>likely<sp/>wrong<sp/>for<sp/>some<sp/>platforms,<sp/>and<sp/>does</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/><sp/><sp/>nothing<sp/>for<sp/>the<sp/>definition<sp/>of<sp/>uintptr_t.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/><ref refid="pstdint_8h_1ac2abfb965e6a308c5912f9e749740d4a" kindref="member">intptr_t</ref>;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>STDINT_H_UINTPTR_T_DEFINED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="798"><highlight class="comment"><sp/>*<sp/><sp/>Assumes<sp/>sig_atomic_t<sp/>is<sp/>signed<sp/>and<sp/>we<sp/>have<sp/>a<sp/>2s<sp/>complement<sp/>machine.</highlight></codeline>
<codeline lineno="799"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SIG_ATOMIC_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="preprocessor">#<sp/>define<sp/>SIG_ATOMIC_MAX<sp/>((((sig_atomic_t)<sp/>1)<sp/>&lt;&lt;<sp/>(sizeof<sp/>(sig_atomic_t)*CHAR_BIT-1))<sp/>-<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="806"><highlight class="normal"></highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined<sp/>(__TEST_PSTDINT_FOR_CORRECTNESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/>*<sp/><sp/>Please<sp/>compile<sp/>with<sp/>the<sp/>maximum<sp/>warning<sp/>settings<sp/>to<sp/>make<sp/>sure<sp/>macros<sp/>are</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/>*<sp/><sp/>not<sp/>defined<sp/>more<sp/>than<sp/>once.</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>glue3_aux(x,y,z)<sp/>x<sp/>##<sp/>y<sp/>##<sp/>z</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>glue3(x,y,z)<sp/>glue3_aux(x,y,z)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLU(bits)<sp/>glue3(uint,bits,_t)<sp/>glue3(u,bits,)<sp/>=<sp/>glue3(UINT,bits,_C)<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECLI(bits)<sp/>glue3(int,bits,_t)<sp/>glue3(i,bits,)<sp/>=<sp/>glue3(INT,bits,_C)<sp/>(0);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DECL(us,bits)<sp/>glue3(DECL,us,)<sp/>(bits)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TESTUMAX(bits)<sp/>glue3(u,bits,)<sp/>=<sp/>~glue3(u,bits,);<sp/>if<sp/>(glue3(UINT,bits,_MAX)<sp/>!=<sp/>glue3(u,bits,))<sp/>printf<sp/>(&quot;Something<sp/>wrong<sp/>with<sp/>UINT%d_MAX\n&quot;</highlight><highlight class="normal">,<sp/>bits)</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REPORTERROR(msg)<sp/>{<sp/>err_n++;<sp/>if<sp/>(err_first<sp/>&lt;=<sp/>0)<sp/>err_first<sp/>=<sp/>__LINE__;<sp/>printf<sp/>msg;<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>main<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>err_first<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(I,8)</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(U,8)</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(I,16)</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(U,16)</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(I,32)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(U,32)</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(I,64)</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/>DECL(U,64)</highlight></codeline>
<codeline lineno="842"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pstdint_8h_1a1a3f3321a0166a004bde0a1e72553f2b" kindref="member">intmax_t</ref><sp/>imax<sp/>=<sp/><ref refid="pstdint_8h_1a6b556b8b5f86e13f1c2a6e8f9b9b4966" kindref="member">INTMAX_C</ref>(0);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="pstdint_8h_1a7643e68e022fde0d947e8dc252f716d6" kindref="member">uintmax_t</ref><sp/>umax<sp/>=<sp/><ref refid="pstdint_8h_1a572bc4e8e4eae73a2e1e6a158d3837a4" kindref="member">UINTMAX_C</ref>(0);</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>str0[256],<sp/>str1[256];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str0,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>PRINTF_INT32_MODIFIER<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>INT32_C(2147483647));</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/></highlight><highlight class="stringliteral">&quot;2147483647&quot;</highlight><highlight class="normal">))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_INT32_MODIFIER<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str0));</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi(<ref refid="pstdint_8h_1aa7207fcbdc05d7cf877066028543c28b" kindref="member">PRINTF_INT32_DEC_WIDTH</ref>)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>strlen(str0))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_INT32_DEC_WIDTH<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="pstdint_8h_1aa7207fcbdc05d7cf877066028543c28b" kindref="member">PRINTF_INT32_DEC_WIDTH</ref>));</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str0,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>PRINTF_INT32_MODIFIER<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/>UINT32_C(4294967295));</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/></highlight><highlight class="stringliteral">&quot;4294967295&quot;</highlight><highlight class="normal">))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_INT32_MODIFIER<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str0));</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi(<ref refid="pstdint_8h_1ac11fdcf6c32e2509ee94472cc9575907" kindref="member">PRINTF_UINT32_DEC_WIDTH</ref>)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>strlen(str0))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_UINT32_DEC_WIDTH<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="pstdint_8h_1ac11fdcf6c32e2509ee94472cc9575907" kindref="member">PRINTF_UINT32_DEC_WIDTH</ref>));</highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>PRINTF_INT64_MODIFIER<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>INT64_C(9223372036854775807));</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;9223372036854775807&quot;</highlight><highlight class="normal">))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_INT32_MODIFIER<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi(<ref refid="pstdint_8h_1a9d70c86cd8202228d85db7aeed22497b" kindref="member">PRINTF_INT64_DEC_WIDTH</ref>)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>strlen(str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_INT64_DEC_WIDTH<sp/>:<sp/>%s,<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="pstdint_8h_1a9d70c86cd8202228d85db7aeed22497b" kindref="member">PRINTF_INT64_DEC_WIDTH</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>strlen(str1)));</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>PRINTF_INT64_MODIFIER<sp/></highlight><highlight class="stringliteral">&quot;u&quot;</highlight><highlight class="normal">,<sp/>UINT64_C(18446744073709550591));</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;18446744073709550591&quot;</highlight><highlight class="normal">))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_INT32_MODIFIER<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi(<ref refid="pstdint_8h_1a580336588dd0e65aaa933f444d1a8a5c" kindref="member">PRINTF_UINT64_DEC_WIDTH</ref>)<sp/>!=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>strlen(str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>PRINTF_UINT64_DEC_WIDTH<sp/>:<sp/>%s,<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/><ref refid="pstdint_8h_1a580336588dd0e65aaa933f444d1a8a5c" kindref="member">PRINTF_UINT64_DEC_WIDTH</ref>,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>strlen(str1)));</highlight></codeline>
<codeline lineno="860"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str0,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/>0,<sp/>~0);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>i8,<sp/>~0);</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>i8<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%u<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>u8,<sp/>~0);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>u8<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>i16,<sp/>~0);</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>i16<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%u<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>u16,<sp/>~0);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>u16<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>PRINTF_INT32_MODIFIER<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>i32,<sp/>~0);</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>i32<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>PRINTF_INT32_MODIFIER<sp/></highlight><highlight class="stringliteral">&quot;u<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>u32,<sp/>~0);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>u32<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/>PRINTF_INT64_MODIFIER<sp/></highlight><highlight class="stringliteral">&quot;d<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>i64,<sp/>~0);</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>i64<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/><ref refid="pstdint_8h_1ad53dd320ab0f0e9f4266bc225a3487df" kindref="member">PRINTF_INTMAX_MODIFIER</ref><sp/></highlight><highlight class="stringliteral">&quot;d<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>imax,<sp/>~0);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>imax<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf<sp/>(str1,<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal"><sp/><ref refid="pstdint_8h_1ad53dd320ab0f0e9f4266bc225a3487df" kindref="member">PRINTF_INTMAX_MODIFIER</ref><sp/></highlight><highlight class="stringliteral">&quot;u<sp/>%x\n&quot;</highlight><highlight class="normal">,<sp/><sp/>umax,<sp/>~0);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>!=<sp/>strcmp<sp/>(str0,<sp/>str1))<sp/>REPORTERROR<sp/>((</highlight><highlight class="stringliteral">&quot;Something<sp/>wrong<sp/>with<sp/>umax<sp/>:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>str1));</highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/>TESTUMAX(8);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>TESTUMAX(16);</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/>TESTUMAX(32);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/>TESTUMAX(64);</highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STR(v)<sp/>#v</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Q(v)<sp/>printf<sp/>(&quot;sizeof<sp/>&quot;</highlight><highlight class="normal"><sp/>STR(v)<sp/>&quot;<sp/>=<sp/>%u\n&quot;,<sp/>(unsigned)<sp/>sizeof<sp/>(v));</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err_n)<sp/>{</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf<sp/>(</highlight><highlight class="stringliteral">&quot;pstdint.h<sp/>is<sp/>not<sp/>correct.<sp/><sp/>Please<sp/>use<sp/>sizes<sp/>below<sp/>to<sp/>correct<sp/>it:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="897"><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(</highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(int8_t)</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(int16_t)</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(int32_t)</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>INT64_MAX</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/>Q(int64_t)</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline lineno="910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/assimp/Compiler/pstdint.h"/>
  </compounddef>
</doxygen>
