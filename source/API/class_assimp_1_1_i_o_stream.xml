<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="class_assimp_1_1_i_o_stream" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>Assimp::IOStream</compoundname>
    <basecompoundref prot="public" virt="non-virtual">Intern::AllocateFromAssimpHeap</basecompoundref>
    <derivedcompoundref refid="class_assimp_1_1_blob_i_o_stream" prot="public" virt="non-virtual">Assimp::BlobIOStream</derivedcompoundref>
    <derivedcompoundref refid="class_assimp_1_1_default_i_o_stream" prot="public" virt="non-virtual">Assimp::DefaultIOStream</derivedcompoundref>
    <derivedcompoundref refid="class_assimp_1_1_memory_i_o_stream" prot="public" virt="non-virtual">Assimp::MemoryIOStream</derivedcompoundref>
    <includes local="no">IOStream.hpp</includes>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1a0be5cf1642597edeffe5360025ddf50f" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>AI_FORCE_INLINE Assimp::IOStream::IOStream</definition>
        <argsstring>() AI_NO_EXCEPT</argsstring>
        <name>IOStream</name>
        <briefdescription>
<para>Constructor protected, use <ref refid="class_assimp_1_1_i_o_system_1ac512ece3b0701de5682553007a4c0816" kindref="member">IOSystem::Open()</ref> to create an instance. </para>
        </briefdescription>
        <detaileddescription>
<para>class <ref refid="class_assimp_1_1_i_o_stream" kindref="compound">IOStream</ref> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="78" column="5" bodyfile="include/assimp/IOStream.hpp" bodystart="133" bodyend="135"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1aaa01183d197fb714f28d6c611b6fa058" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t Assimp::IOStream::FileSize</definition>
        <argsstring>() const =0</argsstring>
        <name>FileSize</name>
        <reimplementedby refid="class_assimp_1_1_blob_i_o_stream_1aef56b63298d89945d1b9cfd65379ab6a">FileSize</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_default_i_o_stream_1a308268ea6efa13b82fd980cd467fafdc">FileSize</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_memory_i_o_stream_1a1f01444c0abd9ccd41da73500226ff45">FileSize</reimplementedby>
        <briefdescription>
<para>Returns filesize Returns the filesize. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="122" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1a7c19952446ece90924b246f087417899" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void Assimp::IOStream::Flush</definition>
        <argsstring>()=0</argsstring>
        <name>Flush</name>
        <reimplementedby refid="class_assimp_1_1_blob_i_o_stream_1aa8875a880e989b6743cbdb613e11ba76">Flush</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_default_i_o_stream_1aebb62f6522d15c0b194a6ef1b32f46e0">Flush</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_memory_i_o_stream_1aae4a10484dbad0604f7663dcaac94055">Flush</reimplementedby>
        <briefdescription>
<para>Flush the contents of the file buffer (for writers) See fflush() for more details. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="128" column="18"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1ae376f641020989d61863b9c6f55c7abf" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t Assimp::IOStream::Read</definition>
        <argsstring>(void *pvBuffer, size_t pSize, size_t pCount)=0</argsstring>
        <name>Read</name>
        <reimplementedby refid="class_assimp_1_1_blob_i_o_stream_1a9752238a2b888f5aaa9f3cc9c94c80d6">Read</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_default_i_o_stream_1aa45b659531f179122c7e7852ad6f5f14">Read</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_memory_i_o_stream_1aa5d0cb047478d3e6f3011286d0c300c5">Read</reimplementedby>
        <param>
          <type>void *</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pSize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pCount</declname>
        </param>
        <briefdescription>
<para>Read from the file. </para>
        </briefdescription>
        <detaileddescription>
<para>See fread() for more details This fails for write-only files </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="92" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1a5ed0dddf418ab08cf3fc21f3f3032220" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type><ref refid="types_8h_1a1f78dfb65090aa930cabb984c8abe711" kindref="member">aiReturn</ref></type>
        <definition>virtual aiReturn Assimp::IOStream::Seek</definition>
        <argsstring>(size_t pOffset, aiOrigin pOrigin)=0</argsstring>
        <name>Seek</name>
        <reimplementedby refid="class_assimp_1_1_blob_i_o_stream_1a0339ebce4ceff0d69da349643c00d861">Seek</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_default_i_o_stream_1a1f4b8aa9afaaa2b300d6cee6165a6a6d">Seek</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_memory_i_o_stream_1af81316ae35d6dd6b09a35a7591c0e96e">Seek</reimplementedby>
        <param>
          <type>size_t</type>
          <declname>pOffset</declname>
        </param>
        <param>
          <type><ref refid="types_8h_1ac50fbaa57d78776ca99e42104d9b2786" kindref="member">aiOrigin</ref></type>
          <declname>pOrigin</declname>
        </param>
        <briefdescription>
<para>Set the read/write cursor of the file. </para>
        </briefdescription>
        <detaileddescription>
<para>Note that the offset is <emphasis>negative</emphasis> for aiOrigin_END. See fseek() for more details </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="110" column="22"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1a316ac6cd16b5a493d1313f792c806194" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t Assimp::IOStream::Tell</definition>
        <argsstring>() const =0</argsstring>
        <name>Tell</name>
        <reimplementedby refid="class_assimp_1_1_blob_i_o_stream_1a1a0cfc06c4c448c9054c6b3cfc661b74">Tell</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_default_i_o_stream_1a8996598fb9b666b6ddae4c93f0253a25">Tell</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_memory_i_o_stream_1a065ccd971f8c9ce1dcb23539058c486f">Tell</reimplementedby>
        <briefdescription>
<para>Get the current position of the read/write cursor. </para>
        </briefdescription>
        <detaileddescription>
<para>See ftell() for more details </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="117" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1ad0ca4aae1b8c4d00db391ac3a4171f7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="pure-virtual">
        <type>size_t</type>
        <definition>virtual size_t Assimp::IOStream::Write</definition>
        <argsstring>(const void *pvBuffer, size_t pSize, size_t pCount)=0</argsstring>
        <name>Write</name>
        <reimplementedby refid="class_assimp_1_1_memory_i_o_stream_1a9ac5af341c3ed61137313264e1b5f964">Write</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_blob_i_o_stream_1aed9dda065eee635d2f8c9eeb8133461a">Write</reimplementedby>
        <reimplementedby refid="class_assimp_1_1_default_i_o_stream_1a05de25f9ac717801fbd0aad06499657a">Write</reimplementedby>
        <param>
          <type>const void *</type>
          <declname>pvBuffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pSize</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pCount</declname>
        </param>
        <briefdescription>
<para>Write to the file. </para>
        </briefdescription>
        <detaileddescription>
<para>See fwrite() for more details This fails for read-only files </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="101" column="20"/>
      </memberdef>
      <memberdef kind="function" id="class_assimp_1_1_i_o_stream_1ae4c9bcff461dba7e26631e691ad8ed2f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>AI_FORCE_INLINE Assimp::IOStream::~IOStream</definition>
        <argsstring>()</argsstring>
        <name>~IOStream</name>
        <briefdescription>
<para>Destructor. </para>
        </briefdescription>
        <detaileddescription>
<para>Deleting the object closes the underlying file, alternatively you may use <ref refid="class_assimp_1_1_i_o_system_1a8c334d60f04bceeb6bd0157d21723f3e" kindref="member">IOSystem::Close()</ref> to release the file. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/assimp/IOStream.hpp" line="85" column="13" bodyfile="include/assimp/IOStream.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>CPP-API: Class to handle file I/O for C++. </para>
    </briefdescription>
    <detaileddescription>
<para>Derive an own implementation from this interface to provide custom IO handling to the <ref refid="class_assimp_1_1_importer" kindref="compound">Importer</ref>. If you implement this interface, be sure to also provide an implementation for <ref refid="class_assimp_1_1_i_o_system" kindref="compound">IOSystem</ref> that creates instances of your custom IO class. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>Assimp::DefaultIOStream</label>
        <link refid="class_assimp_1_1_default_i_o_stream"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>Assimp::MemoryIOStream</label>
        <link refid="class_assimp_1_1_memory_i_o_stream"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>Assimp::IOStream</label>
        <link refid="class_assimp_1_1_i_o_stream"/>
      </node>
      <node id="2">
        <label>Assimp::BlobIOStream</label>
        <link refid="class_assimp_1_1_blob_i_o_stream"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="include/assimp/IOStream.hpp" line="71" column="1" bodyfile="include/assimp/IOStream.hpp" bodystart="75" bodyend="129"/>
    <listofallmembers>
      <member refid="class_assimp_1_1_i_o_stream_1aaa01183d197fb714f28d6c611b6fa058" prot="public" virt="pure-virtual"><scope>Assimp::IOStream</scope><name>FileSize</name></member>
      <member refid="class_assimp_1_1_i_o_stream_1a7c19952446ece90924b246f087417899" prot="public" virt="pure-virtual"><scope>Assimp::IOStream</scope><name>Flush</name></member>
      <member refid="class_assimp_1_1_i_o_stream_1a0be5cf1642597edeffe5360025ddf50f" prot="protected" virt="non-virtual"><scope>Assimp::IOStream</scope><name>IOStream</name></member>
      <member refid="class_assimp_1_1_i_o_stream_1ae376f641020989d61863b9c6f55c7abf" prot="public" virt="pure-virtual"><scope>Assimp::IOStream</scope><name>Read</name></member>
      <member refid="class_assimp_1_1_i_o_stream_1a5ed0dddf418ab08cf3fc21f3f3032220" prot="public" virt="pure-virtual"><scope>Assimp::IOStream</scope><name>Seek</name></member>
      <member refid="class_assimp_1_1_i_o_stream_1a316ac6cd16b5a493d1313f792c806194" prot="public" virt="pure-virtual"><scope>Assimp::IOStream</scope><name>Tell</name></member>
      <member refid="class_assimp_1_1_i_o_stream_1ad0ca4aae1b8c4d00db391ac3a4171f7b" prot="public" virt="pure-virtual"><scope>Assimp::IOStream</scope><name>Write</name></member>
      <member refid="class_assimp_1_1_i_o_stream_1ae4c9bcff461dba7e26631e691ad8ed2f" prot="public" virt="virtual"><scope>Assimp::IOStream</scope><name>~IOStream</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
